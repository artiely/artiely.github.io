import{i as a,o as p,c as t,j as n,k as e}from"./app.0ca8770e.js";const o=e(`<h1 id="nodejs%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E4%B8%8E%E5%A4%9A%E8%BF%9B%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">nodejs\u4E8B\u4EF6\u5FAA\u73AF\u4E0E\u591A\u8FDB\u7A0B</span><span class="suffix"></span></h1><h2 id="%E4%BB%8B%E7%BB%8D" tabindex="-1"><span class="prefix"></span><span class="content">\u4ECB\u7ECD</span><span class="suffix"></span></h2><ul><li>\u4E86\u89E3\u4E8B\u4EF6\u5FAA\u73AF\u7684\u6982\u5FF5</li><li>\u5B66\u4E60\u6D4F\u89C8\u5668\u4E2D\u7684\u4E8B\u4EF6\u5FAA\u73AF\u673A\u5236</li><li>\u5B66\u4E60nodejs\u4E2D\u7684\u4E8B\u4EF6\u5FAA\u73AF\u673A\u5236</li><li>\u4E86\u89E3\u591A\u8FDB\u7A0B\uFF0C\u591A\u7EBF\u7A0B\u4E4B\u95F4\u7684\u533A\u522B</li><li>\u5B66\u4E60nodejs\u4E2D\u7684\u591A\u8FDB\u7A0B\u5E76\u4F7F\u7528cluster\u6765\u5F00\u542F\u591A\u8FDB\u7A0B</li></ul><h2 id="%E7%9B%AE%E6%A0%87" tabindex="-1"><span class="prefix"></span><span class="content">\u76EE\u6807</span><span class="suffix"></span></h2><ul><li>\u6DF1\u5165\u638C\u63E1\u6D4F\u89C8\u5668\u4E0Enodejs\u4E2D\u7684\u4E8B\u4EF6\u5FAA\u73AF\u673A\u5236\uFF0C\u5E76\u4E14\u80FD\u7406\u89E3\u5B83\u4EEC\u4E4B\u95F4\u7684\u533A\u522B</li><li>\u4F7F\u7528cluster\u5F00\u542F\u591A\u8FDB\u7A0B</li></ul><h2 id="%E7%AC%AC%E4%B8%80%E7%AB%A0-%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E4%BB%8B%E7%BB%8D" tabindex="-1"><span class="prefix"></span><span class="content">\u7B2C\u4E00\u7AE0 \u4E8B\u4EF6\u5FAA\u73AF\u4ECB\u7ECD</span><span class="suffix"></span></h2><h3 id="%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF" tabindex="-1"><span class="prefix"></span><span class="content">\u6D4F\u89C8\u5668\u4E2D\u7684\u4E8B\u4EF6\u5FAA\u73AF</span><span class="suffix"></span></h3><p>\u4E3A\u4E86\u534F\u8C03\u4E8B\u4EF6\uFF08event\uFF09\uFF0C\u7528\u6237\u4EA4\u4E92\uFF08user interaction\uFF09\uFF0C\u811A\u672C\uFF08script\uFF09\uFF0C\u6E32\u67D3\uFF08rendering\uFF09\uFF0C\u7F51\u7EDC\uFF08networking\uFF09\u7B49\uFF0C\u7528\u6237\u4EE3\u7406\uFF08user agent\uFF09\u5FC5\u987B\u4F7F\u7528\u4E8B\u4EF6\u5FAA\u73AF\uFF08event loops\uFF09\u3002</p><blockquote><p>To coordinate events, user interaction, scripts, rendering, networking, and so forth, user agents must use\xA0event loops\xA0as described in this section. Each\xA0agent\xA0has an associated\xA0event loop.</p></blockquote><ul><li>\u4E8B\u4EF6\uFF1APostMessage, MutationObserver\u7B49</li><li>\u7528\u6237\u4EA4\u4E92\uFF1A click\uFF0C onScroll\u7B49</li><li>\u6E32\u67D3\uFF1A \u89E3\u6790dom\uFF0Ccss\u7B49</li><li>\u811A\u672C\uFF1Ajs\u811A\u672C\u6267\u884C</li></ul><h3 id="nodejs%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF" tabindex="-1"><span class="prefix"></span><span class="content">nodejs\u4E2D\u7684\u4E8B\u4EF6\u5FAA\u73AF</span><span class="suffix"></span></h3><p>\u4E8B\u4EF6\u5FAA\u73AF\u5141\u8BB8Node.js\u6267\u884C\u975E\u963B\u585EI / O\u64CD\u4F5C - \u5C3D\u7BA1JavaScript\u662F\u5355\u7EBF\u7A0B\u7684 - \u901A\u8FC7\u5C3D\u53EF\u80FD\u5C06\u64CD\u4F5C\u5378\u8F7D\u5230\u7CFB\u7EDF\u5185\u6838\u3002 \u7531\u4E8E\u5927\u591A\u6570\u73B0\u4EE3\u5185\u6838\u90FD\u662F\u591A\u7EBF\u7A0B\u7684\uFF0C\u56E0\u6B64\u5B83\u4EEC\u53EF\u4EE5\u5904\u7406\u5728\u540E\u53F0\u6267\u884C\u7684\u591A\u4E2A\u64CD\u4F5C\u3002\u5F53\u5176\u4E2D\u4E00\u4E2A\u64CD\u4F5C\u5B8C\u6210\u65F6\uFF0C\u5185\u6838\u4F1A\u544A\u8BC9Node.js\uFF0C\u4EE5\u4FBF\u53EF\u4EE5\u5C06\u76F8\u5E94\u7684\u56DE\u8C03\u6DFB\u52A0\u5230\u8F6E\u8BE2\u961F\u5217\u4E2D\u4EE5\u6700\u7EC8\u6267\u884C\u3002</p><blockquote><p>The event loop is what allows Node.js to perform non-blocking I/O operations \u2014 despite the fact that JavaScript is single-threaded \u2014 by offloading operations to the system kernel whenever possible. Since most modern kernels are multi-threaded, they can handle multiple operations executing in the background. When one of these operations completes, the kernel tells Node.js so that the appropriate callback may be added to the\xA0poll\xA0queue to eventually be executed. We\u2019ll explain this in further detail later in this topic.</p></blockquote><ul><li>\u4E8B\u4EF6\uFF1A EventEmitter</li><li>\u975E\u963B\u585EI / O\uFF1A\u7F51\u7EDC\u8BF7\u6C42\uFF0C\u6587\u4EF6\u8BFB\u5199\u7B49</li><li>\u811A\u672C\uFF1Ajs\u811A\u672C\u6267\u884C</li></ul><h3 id="%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E7%9A%84%E6%9C%AC%E8%B4%A8" tabindex="-1"><span class="prefix"></span><span class="content">\u4E8B\u4EF6\u5FAA\u73AF\u7684\u672C\u8D28</span><span class="suffix"></span></h3><p>\u5728\u6D4F\u89C8\u5668\u6216\u8005nodejs\u73AF\u5883\u4E2D\uFF0C\u8FD0\u884C\u65F6\u5BF9js\u811A\u672C\u7684\u8C03\u5EA6\u65B9\u5F0F\u5C31\u53EB\u505A\u4E8B\u4EF6\u5FAA\u73AF\u3002</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 1. main 2. promise 3. setTimeout</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF" tabindex="-1"><span class="prefix"></span><span class="content">\u7B2C\u4E8C\u7AE0 \u6D4F\u89C8\u5668\u4E8B\u4EF6\u5FAA\u73AF</span><span class="suffix"></span></h2><h3 id="javascript%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%95%E7%BA%BF%E7%A8%8B%E7%9A%84%EF%BC%9F" tabindex="-1"><span class="prefix"></span><span class="content">Javascript\u4E3A\u4EC0\u4E48\u662F\u5355\u7EBF\u7A0B\u7684\uFF1F</span><span class="suffix"></span></h3><p>\u6D4F\u89C8\u5668js\u7684\u4F5C\u7528\u662F\u64CD\u4F5CDOM\uFF0C\u8FD9\u51B3\u5B9A\u4E86\u5B83\u53EA\u80FD\u662F\u5355\u7EBF\u7A0B\uFF0C\u5426\u5219\u4F1A\u5E26\u6765\u5F88\u590D\u6742\u7684\u540C\u6B65\u95EE\u9898\u3002\u6BD4\u5982\uFF0C\u5047\u5B9AJavaScript\u540C\u65F6\u6709\u4E24\u4E2A\u7EBF\u7A0B\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u5728\u67D0\u4E2ADOM\u8282\u70B9\u4E0A\u6DFB\u52A0\u5185\u5BB9\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5220\u9664\u4E86\u8FD9\u4E2A\u8282\u70B9\uFF0C\u8FD9\u65F6\u6D4F\u89C8\u5668\u5E94\u8BE5\u4EE5\u54EA\u4E2A\u7EBF\u7A0B\u4E3A\u51C6\uFF1F</p><h3 id="%E4%BB%BB%E5%8A%A1%E9%98%9F%E5%88%97" tabindex="-1"><span class="prefix"></span><span class="content">\u4EFB\u52A1\u961F\u5217</span><span class="suffix"></span></h3><p>\u5355\u7EBF\u7A0B\u5C31\u610F\u5473\u7740\u6240\u6709\u4EFB\u52A1\u9700\u8981\u6392\u961F\uFF0C\u5982\u679C\u56E0\u4E3A\u4EFB\u52A1cpu\u8BA1\u7B97\u91CF\u5927\u8FD8\u597D\uFF0C\u4F46\u662FI/O\u64CD\u4F5Ccpu\u662F\u95F2\u7740\u7684\u3002\u6240\u4EE5js\u5C31\u8BBE\u8BA1\u6210\u4E86\u4E00\u95E8\u5F02\u6B65\u7684\u8BED\u8A00\uFF0C\u4E0D\u4F1A\u505A\u65E0\u754F\u7684\u7B49\u5F85\u3002\u4EFB\u52A1\u53EF\u4EE5\u5206\u6210\u4E24\u79CD\uFF0C\u4E00\u79CD\u662F\u540C\u6B65\u4EFB\u52A1\uFF08synchronous\uFF09\uFF0C\u53E6\u4E00\u79CD\u662F\u5F02\u6B65\u4EFB\u52A1\uFF08asynchronous\uFF09\u3002</p><blockquote><p>\uFF081\uFF09\u6240\u6709\u540C\u6B65\u4EFB\u52A1\u90FD\u5728\u4E3B\u7EBF\u7A0B\u4E0A\u6267\u884C\uFF0C\u5F62\u6210\u4E00\u4E2A\u6267\u884C\u6808\uFF08execution context stack\uFF09\u3002</p><p>\uFF082\uFF09\u4E3B\u7EBF\u7A0B\u4E4B\u5916\uFF0C\u8FD8\u5B58\u5728\u4E00\u4E2A&quot;\u4EFB\u52A1\u961F\u5217&quot;\uFF08task queue\uFF09\u3002\u53EA\u8981\u5F02\u6B65\u4EFB\u52A1\u6709\u4E86\u8FD0\u884C\u7ED3\u679C\uFF0C\u5C31\u5728&quot;\u4EFB\u52A1\u961F\u5217&quot;\u4E4B\u4E2D\u653E\u7F6E\u4E00\u4E2A\u4E8B\u4EF6\u3002</p><p>\uFF083\uFF09\u4E00\u65E6&quot;\u6267\u884C\u6808&quot;\u4E2D\u7684\u6240\u6709\u540C\u6B65\u4EFB\u52A1\u6267\u884C\u5B8C\u6BD5\uFF0C\u7CFB\u7EDF\u5C31\u4F1A\u8BFB\u53D6&quot;\u4EFB\u52A1\u961F\u5217&quot;\uFF0C\u770B\u770B\u91CC\u9762\u6709\u54EA\u4E9B\u4E8B\u4EF6\u3002\u90A3\u4E9B\u5BF9\u5E94\u7684\u5F02\u6B65\u4EFB\u52A1\uFF0C\u4E8E\u662F\u7ED3\u675F\u7B49\u5F85\u72B6\u6001\uFF0C\u8FDB\u5165\u6267\u884C\u6808\uFF0C\u5F00\u59CB\u6267\u884C\u3002</p><p>\uFF084\uFF09\u4E3B\u7EBF\u7A0B\u4E0D\u65AD\u91CD\u590D\u4E0A\u9762\u7684\u7B2C\u4E09\u6B65\u3002</p></blockquote><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;main1&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;main2&#39;</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>\u4E3B\u7EBF\u7A0B\u4ECE&quot;\u4EFB\u52A1\u961F\u5217&quot;\u4E2D\u8BFB\u53D6\u4E8B\u4EF6\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u662F\u5FAA\u73AF\u4E0D\u65AD\u7684\uFF0C\u6240\u4EE5\u6574\u4E2A\u7684\u8FD9\u79CD\u8FD0\u884C\u673A\u5236\u53C8\u79F0\u4E3AEvent Loop\uFF08\u4E8B\u4EF6\u5FAA\u73AF\uFF09\u3002</strong></p><h3 id="%E5%AE%8F%E4%BB%BB%E5%8A%A1%E4%B8%8E%E5%BE%AE%E4%BB%BB%E5%8A%A1" tabindex="-1"><span class="prefix"></span><span class="content">\u5B8F\u4EFB\u52A1\u4E0E\u5FAE\u4EFB\u52A1</span><span class="suffix"></span></h3><p>\u9664\u4E86\u5E7F\u4E49\u7684\u540C\u6B65\u4EFB\u52A1\u548C\u5F02\u6B65\u4EFB\u52A1\uFF0CJavaScript \u5355\u7EBF\u7A0B\u4E2D\u7684\u4EFB\u52A1\u53EF\u4EE5\u7EC6\u5206\u4E3A\u5B8F\u4EFB\u52A1\uFF08macrotask\uFF09\u548C\u5FAE\u4EFB\u52A1(microtask)\u3002</p><ul><li><p>macrotask: script(\u6574\u4F53\u4EE3\u7801), setTimeout, setInterval, setImmediate, I/O, UI rendering\u3002</p></li><li><p>microtask\uFF1Aprocess.nextTick, Promise, Object.observe, MutationObserver\u3002</p></li></ul><blockquote><ol><li>\u5B8F\u4EFB\u52A1\u8FDB\u5165\u4E3B\u7EBF\u7A0B\uFF0C\u6267\u884C\u8FC7\u7A0B\u4E2D\u4F1A\u6536\u96C6\u5FAE\u4EFB\u52A1\u52A0\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\u3002</li><li>\u5B8F\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u4E4B\u540E\uFF0C\u7ACB\u9A6C\u6267\u884C\u5FAE\u4EFB\u52A1\u4E2D\u7684\u4EFB\u52A1\u3002\u5FAE\u4EFB\u52A1\u6267\u884C\u8FC7\u7A0B\u4E2D\u5C06\u518D\u6B21\u6536\u96C6\u5B8F\u4EFB\u52A1\uFF0C\u5E76\u52A0\u5165\u5B8F\u4EFB\u52A1\u961F\u5217\u3002</li><li>\u53CD\u590D\u6267\u884C1\uFF0C2\u6B65\u9AA4</li></ol></blockquote><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200313154502.png" width="600px"><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 1. main 2. promise 3. setTimeout</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98" tabindex="-1"><span class="prefix"></span><span class="content">\u9AD8\u9891\u9762\u8BD5\u9898</span><span class="suffix"></span></h4><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise&#39;</span><span class="token punctuation">)</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>\u6BCF\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u6267\u884C\u4E00\u4E2A\u5B8F\u4EFB\u52A1\u548C\u6240\u6709\u7684\u5FAE\u4EFB\u52A1\u3002</p></blockquote><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>\u4EFB\u52A1\u961F\u5217\u4E00\u5B9A\u4F1A\u4FDD\u6301\u5148\u8FDB\u5148\u51FA\u7684\u987A\u5E8F\u6267\u884C\u3002</p></blockquote><h2 id="%E7%AC%AC%E4%B8%89%E7%AB%A0-nodejs%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF" tabindex="-1"><span class="prefix"></span><span class="content">\u7B2C\u4E09\u7AE0 nodejs\u4E8B\u4EF6\u5FAA\u73AF</span><span class="suffix"></span></h2><p><strong>\u5F53Node.js\u542F\u52A8\u65F6\u4F1A\u521D\u59CB\u5316event loop, \u6BCF\u4E00\u4E2Aevent loop\u90FD\u4F1A\u5305\u542B\u6309\u5982\u4E0B\u516D\u4E2A\u5FAA\u73AF\u9636\u6BB5\uFF0Cnodejs\u4E8B\u4EF6\u5FAA\u73AF\u548C\u6D4F\u89C8\u5668\u7684\u4E8B\u4EF6\u5FAA\u73AF\u5B8C\u5168\u4E0D\u4E00\u6837\u3002</strong></p><blockquote><p><em>When Node.js starts, it initializes the event loop, processes the provided input script (or drops into the REPL, which is not covered in this document) which may make async API calls, schedule timers, or call process.nextTick(), then begins processing the event loop.</em></p></blockquote><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200313154503.png" alt="image-20190528144107202"></figure><blockquote><p><em>\u6CE8\u610F: \u56FE\u4E2D\u7684\u6BCF\u4E2A\u65B9\u6846\u88AB\u79F0\u4F5C\u4E8B\u4EF6\u5FAA\u73AF\u7684\u4E00\u4E2A\u201D\u9636\u6BB5(phase)\u201D</em>, \u8FD96\u4E2A\u9636\u6BB5\u4E3A\u4E00\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u3002</p></blockquote><h3 id="%E9%98%B6%E6%AE%B5%E6%A6%82%E8%A7%88" tabindex="-1"><span class="prefix"></span><span class="content">\u9636\u6BB5\u6982\u89C8</span><span class="suffix"></span></h3><ul><li><p><strong>timers(\u5B9A\u65F6\u5668)</strong> : \u6B64\u9636\u6BB5\u6267\u884C\u90A3\u4E9B\u7531 <code class="">setTimeout()</code> \u548C <code class="">setInterval()</code> \u8C03\u5EA6\u7684\u56DE\u8C03\u51FD\u6570.</p></li><li><p><strong>I/O callbacks(I/O\u56DE\u8C03)</strong> : \u6B64\u9636\u6BB5\u4F1A\u6267\u884C\u51E0\u4E4E\u6240\u6709\u7684\u56DE\u8C03\u51FD\u6570, \u9664\u4E86 <strong>close callbacks(\u5173\u95ED\u56DE\u8C03)</strong> \u548C \u90A3\u4E9B\u7531 <strong>timers</strong> \u4E0E <code class="">setImmediate()</code>\u8C03\u5EA6\u7684\u56DE\u8C03.</p><blockquote><p>setImmediate \u7EA6\u7B49\u4E8E setTimeout(cb,0)</p></blockquote></li><li><p>idle(\u7A7A\u8F6C), prepare : \u6B64\u9636\u6BB5\u53EA\u5728\u5185\u90E8\u4F7F\u7528</p></li><li><p><strong>poll(\u8F6E\u8BE2)</strong> : \u68C0\u7D22\u65B0\u7684I/O\u4E8B\u4EF6; \u5728\u6070\u5F53\u7684\u65F6\u5019Node\u4F1A\u963B\u585E\u5728\u8FD9\u4E2A\u9636\u6BB5</p></li><li><p>check(\u68C0\u67E5) : <code class="">setImmediate()</code> \u8BBE\u7F6E\u7684\u56DE\u8C03\u4F1A\u5728\u6B64\u9636\u6BB5\u88AB\u8C03\u7528</p></li><li><p>close callbacks(\u5173\u95ED\u4E8B\u4EF6\u7684\u56DE\u8C03): \u8BF8\u5982 <code class="">socket.on(&#39;close&#39;, ...)</code> \u6B64\u7C7B\u7684\u56DE\u8C03\u5728\u6B64\u9636\u6BB5\u88AB\u8C03\u7528</p></li></ul><p>\u5728\u4E8B\u4EF6\u5FAA\u73AF\u7684\u6BCF\u6B21\u8FD0\u884C\u4E4B\u95F4, Node.js\u4F1A\u68C0\u67E5\u5B83\u662F\u5426\u5728\u7B49\u5F85\u5F02\u6B65I/O\u6216\u5B9A\u65F6\u5668, \u5982\u679C\u6CA1\u6709\u7684\u8BDD\u5C31\u4F1A\u81EA\u52A8\u5173\u95ED.</p><blockquote><p>\u5982\u679Cevent loop\u8FDB\u5165\u4E86 poll\u9636\u6BB5\uFF0C\u4E14\u4EE3\u7801\u672A\u8BBE\u5B9Atimer\uFF0C\u5C06\u4F1A\u53D1\u751F\u4E0B\u9762\u60C5\u51B5\uFF1A</p><ul><li>\u5982\u679Cpoll queue\u4E0D\u4E3A\u7A7A\uFF0Cevent loop\u5C06\u540C\u6B65\u7684\u6267\u884Cqueue\u91CC\u7684callback,\u76F4\u81F3queue\u4E3A\u7A7A\uFF0C\u6216\u6267\u884C\u7684callback\u5230\u8FBE\u7CFB\u7EDF\u4E0A\u9650;</li><li>\u5982\u679Cpoll queue\u4E3A\u7A7A\uFF0C\u5C06\u4F1A\u53D1\u751F\u4E0B\u9762\u60C5\u51B5\uFF1A <ul><li>\u5982\u679C\u4EE3\u7801\u5DF2\u7ECF\u88ABsetImmediate()\u8BBE\u5B9A\u4E86callback, event loop\u5C06\u7ED3\u675Fpoll\u9636\u6BB5\u8FDB\u5165check\u9636\u6BB5\uFF0C\u5E76\u6267\u884Ccheck\u9636\u6BB5\u7684queue (check\u9636\u6BB5\u7684queue\u662F setImmediate\u8BBE\u5B9A\u7684)</li><li>\u5982\u679C\u4EE3\u7801\u6CA1\u6709\u8BBE\u5B9AsetImmediate(callback)\uFF0Cevent loop\u5C06\u963B\u585E\u5728\u8BE5\u9636\u6BB5\u7B49\u5F85callbacks\u52A0\u5165poll queue,\u4E00\u65E6\u5230\u8FBE\u5C31\u7ACB\u5373\u6267\u884C</li></ul></li></ul><p>\u5982\u679Cevent loop\u8FDB\u5165\u4E86 poll\u9636\u6BB5\uFF0C\u4E14\u4EE3\u7801\u8BBE\u5B9A\u4E86timer\uFF1A</p><ul><li>\u5982\u679Cpoll queue\u8FDB\u5165\u7A7A\u72B6\u6001\u65F6\uFF08\u5373poll \u9636\u6BB5\u4E3A\u7A7A\u95F2\u72B6\u6001\uFF09\uFF0Cevent loop\u5C06\u68C0\u67E5timers,\u5982\u679C\u67091\u4E2A\u6216\u591A\u4E2Atimers\u65F6\u95F4\u65F6\u95F4\u5DF2\u7ECF\u5230\u8FBE\uFF0Cevent loop\u5C06\u6309\u5FAA\u73AF\u987A\u5E8F\u8FDB\u5165 timers \u9636\u6BB5\uFF0C\u5E76\u6267\u884Ctimer queue.</li></ul></blockquote><h3 id="%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C1" tabindex="-1"><span class="prefix"></span><span class="content">\u4EE3\u7801\u6267\u884C1</span><span class="suffix"></span></h3><blockquote><p><code class="">path.resolve()</code> \u65B9\u6CD5\u4F1A\u628A\u4E00\u4E2A\u8DEF\u5F84\u6216\u8DEF\u5F84\u7247\u6BB5\u7684\u5E8F\u5217\u89E3\u6790\u4E3A\u4E00\u4E2A\u7EDD\u5BF9\u8DEF\u5F84\u3002</p><p><code class="">fs.readFile</code> \u5F02\u6B65\u5730\u8BFB\u53D6\u6587\u4EF6\u7684\u5168\u90E8\u5185\u5BB9\u3002</p><p><code class="">__dirname</code> \u603B\u662F\u6307\u5411\u88AB\u6267\u884C\u6587\u4EF6\u5939\u7684\u7EDD\u5BF9\u8DEF\u5F84</p></blockquote><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">someAsyncOperation</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u82B1\u8D392\u6BEB\u79D2</span>
  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;/read.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> timeoutScheduled <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fileReadTime <span class="token operator">=</span> <span class="token number">0</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> delay <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> timeoutScheduled
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">setTimeout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>delay<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms have passed since I was scheduled</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fileReaderTime&#39;</span><span class="token punctuation">,</span> fileReadtime <span class="token operator">-</span> timeoutScheduled<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

<span class="token function">someAsyncOperation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  fileReadtime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> fileReadtime <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C2" tabindex="-1"><span class="prefix"></span><span class="content">\u4EE3\u7801\u6267\u884C2</span><span class="suffix"></span></h3><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">someAsyncOperation</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> time <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u82B1\u8D399\u6BEB\u79D2</span>
  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/path/to/xxxx.pdf&#39;</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> timeoutScheduled <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fileReadTime <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">let</span> delay <span class="token operator">=</span> <span class="token number">0</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  delay <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> timeoutScheduled
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

<span class="token function">someAsyncOperation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  fileReadtime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> fileReadtime <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">setTimeout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>delay<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms have passed since I was scheduled</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fileReaderTime&#39;</span><span class="token punctuation">,</span> fileReadtime <span class="token operator">-</span> timeoutScheduled<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C3" tabindex="-1"><span class="prefix"></span><span class="content">\u4EE3\u7801\u6267\u884C3</span><span class="suffix"></span></h3><blockquote><p>\u5728nodejs\u4E2D\uFF0C setTimeout(demo, 0) === setTimeout(demo, 1)</p><p>\u5728\u6D4F\u89C8\u5668\u91CC\u9762 setTimeout(demo, 0) === setTimeout(demo, 4)</p></blockquote><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timeout&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token function">setImmediate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;immediate&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// setImmediate\u5B83\u6709\u65F6\u5019\u662F1ms\u4E4B\u524D\u6267\u884C\uFF0C\u6709\u65F6\u5019\u53C8\u662F1ms\u4E4B\u540E\u6267\u884C\uFF1F</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>\u56E0\u4E3Aevent loop\u7684\u542F\u52A8\u4E5F\u662F\u9700\u8981\u65F6\u95F4\u7684\uFF0C\u53EF\u80FD\u6267\u884C\u5230poll\u9636\u6BB5\u5DF2\u7ECF\u8D85\u8FC7\u4E861ms\uFF0C\u6B64\u65F6setTimeout\u4F1A\u5148\u6267\u884C\u3002\u53CD\u4E4BsetImmediate\u5148\u6267\u884C</p></blockquote><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;/read.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setImmediate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setImmediate&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="process.nexttick" tabindex="-1"><span class="prefix"></span><span class="content">process.nextTick</span><span class="suffix"></span></h3><p><strong>process.nextTick()\u4E0D\u5728event loop\u7684\u4EFB\u4F55\u9636\u6BB5\u6267\u884C\uFF0C\u800C\u662F\u5728\u5404\u4E2A\u9636\u6BB5\u5207\u6362\u7684\u4E2D\u95F4\u6267\u884C</strong>,\u5373\u4ECE\u4E00\u4E2A\u9636\u6BB5\u5207\u6362\u5230\u4E0B\u4E2A\u9636\u6BB5\u524D\u6267\u884C\u3002</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>__filename<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token function">setImmediate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setImmediate&#39;</span><span class="token punctuation">)</span>
    process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nextTick3&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nextTick1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nextTick2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%9B%A0" tabindex="-1"><span class="prefix"></span><span class="content">\u8BBE\u8BA1\u539F\u56E0</span><span class="suffix"></span></h4><p>\u5141\u8BB8\u5F00\u53D1\u8005\u901A\u8FC7\u9012\u5F52\u8C03\u7528 <code class="">process.nextTick()</code> \u6765\u963B\u585EI/O\u64CD\u4F5C\u3002</p><h4 id="nexttick%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF" tabindex="-1"><span class="prefix"></span><span class="content">nextTick\u5E94\u7528\u573A\u666F</span><span class="suffix"></span></h4><ol><li>\u5728\u591A\u4E2A\u4E8B\u4EF6\u91CC\u4EA4\u53C9\u6267\u884CCPU\u8FD0\u7B97\u5BC6\u96C6\u578B\u7684\u4EFB\u52A1\uFF1A</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span>compute<span class="token punctuation">)</span><span class="token comment">//</span>
<span class="token punctuation">}</span>

http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u670D\u52A1http\u8BF7\u6C42\u7684\u65F6\u5019\uFF0C\u8FD8\u80FD\u62BD\u7A7A\u8FDB\u884C\u4E00\u4E9B\u8BA1\u7B97\u4EFB\u52A1</span>
  res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/plain&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span> <span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">)</span>

<span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>\u5728\u8FD9\u79CD\u6A21\u5F0F\u4E0B\uFF0C\u6211\u4EEC\u4E0D\u9700\u8981\u9012\u5F52\u7684\u8C03\u7528compute()\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u5728\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u4F7F\u7528process.nextTick()\u5B9A\u4E49compute()\u5728\u4E0B\u4E00\u4E2A\u65F6\u95F4\u70B9\u6267\u884C\u5373\u53EF\u3002\u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u6709\u65B0\u7684http\u8BF7\u6C42\u8FDB\u6765\uFF0C\u4E8B\u4EF6\u5FAA\u73AF\u673A\u5236\u4F1A\u5148\u5904\u7406\u65B0\u7684\u8BF7\u6C42\uFF0C\u7136\u540E\u518D\u8C03\u7528compute()\u3002\u53CD\u4E4B\uFF0C\u5982\u679C\u4F60\u628Acompute()\u653E\u5728\u4E00\u4E2A\u9012\u5F52\u8C03\u7528\u91CC\uFF0C\u90A3\u7CFB\u7EDF\u5C31\u4F1A\u4E00\u76F4\u963B\u585E\u5728compute()\u91CC\uFF0C\u65E0\u6CD5\u5904\u7406\u65B0\u7684http\u8BF7\u6C42\u4E86\u3002</p></blockquote><ol start="2"><li>\u4FDD\u6301\u56DE\u8C03\u51FD\u6570\u5F02\u6B65\u6267\u884C\u7684\u539F\u5219</li></ol><p>\u5F53\u4F60\u7ED9\u4E00\u4E2A\u51FD\u6570\u5B9A\u4E49\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u65F6\uFF0C\u4F60\u8981\u786E\u4FDD\u8FD9\u4E2A\u56DE\u8C03\u662F\u88AB\u5F02\u6B65\u6267\u884C\u7684\u3002\u4E0B\u9762\u6211\u4EEC\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u4F8B\u5B50\u4E2D\u7684\u56DE\u8C03\u8FDD\u53CD\u4E86\u8FD9\u4E00\u539F\u5219\uFF1A</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">function</span> <span class="token function">asyncFake</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">===</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">asyncFake</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// this callback is actually called synchronously!</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u4E3A\u4EC0\u4E48\u8FD9\u6837\u4E0D\u597D\u5462\uFF1F\u6211\u4EEC\u6765\u770BNode.js \u6587\u6863\u91CC\u4E00\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">var</span> client <span class="token operator">=</span> net<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token number">8124</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;client connected&#39;</span><span class="token punctuation">)</span>
  client<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;world!\\r\\n&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u91CC\uFF0C\u5982\u679C\u56E0\u4E3A\u67D0\u79CD\u539F\u56E0\uFF0Cnet.connect()\u53D8\u6210\u540C\u6B65\u6267\u884C\u7684\u4E86\uFF0C\u56DE\u8C03\u51FD\u6570\u5C31\u4F1A\u88AB\u7ACB\u523B\u6267\u884C\uFF0C\u56E0\u6B64\u56DE\u8C03\u51FD\u6570\u5199\u5230\u5BA2\u6237\u7AEF\u7684\u53D8\u91CF\u5C31\u6C38\u8FDC\u4E0D\u4F1A\u88AB\u521D\u59CB\u5316\u4E86\u3002</p><p>\u8FD9\u79CD\u60C5\u51B5\u4E0B\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528process.nextTick()\u628A\u4E0A\u9762asyncFake()\u6539\u6210\u5F02\u6B65\u6267\u884C\u7684\uFF1A</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">function</span> <span class="token function">asyncReal</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">callback</span><span class="token punctuation">(</span>data <span class="token operator">===</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li><p>\u7528\u5728\u4E8B\u4EF6\u89E6\u53D1\u8FC7\u7A0B\u4E2D</p><blockquote><p>EventEmitter\u67092\u4E2A\u6BD4\u8F83\u6838\u5FC3\u7684\u65B9\u6CD5\uFF0C on\u548Cemit\u3002node\u81EA\u5E26\u53D1\u5E03/\u8BA2\u9605\u6A21\u5F0F</p></blockquote></li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> EventEmitter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>EventEmitter

<span class="token keyword">function</span> <span class="token function">StreamLibrary</span><span class="token punctuation">(</span><span class="token parameter">resourceName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token class-name">StreamLibrary</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">EventEmitter</span><span class="token punctuation">.</span>prototype <span class="token comment">// inherit from EventEmitter</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StreamLibrary</span><span class="token punctuation">(</span><span class="token string">&#39;fooResource&#39;</span><span class="token punctuation">)</span>

stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Reading has started&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">function</span> <span class="token function">StreamLibrary</span><span class="token punctuation">(</span><span class="token parameter">resourceName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span>

  process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    self<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u4FDD\u8BC1\u8BA2\u9605\u6C38\u8FDC\u5728\u53D1\u5E03\u4E4B\u524D</span>

  <span class="token comment">// read from the file, and for every chunk read, do:</span>

<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="%E7%AC%AC%E5%9B%9B%E7%AB%A0-nodejs%E5%A4%9A%E8%BF%9B%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u7B2C\u56DB\u7AE0 nodejs\u591A\u8FDB\u7A0B</span><span class="suffix"></span></h2><h3 id="%E6%9C%AC%E7%AB%A0%E6%A6%82%E8%A6%81" tabindex="-1"><span class="prefix"></span><span class="content">\u672C\u7AE0\u6982\u8981</span><span class="suffix"></span></h3><ul><li>\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528\u591A\u8FDB\u7A0B</li><li>\u591A\u8FDB\u7A0B\u548C\u591A\u7EBF\u7A0B\u4ECB\u7ECD</li><li>nodejs\u5F00\u542F\u591A\u7EBF\u7A0B\u548C\u591A\u8FDB\u7A0B\u7684\u65B9\u6CD5</li><li>cluster\u539F\u7406\u4ECB\u7ECD</li></ul><h3 id="%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%A4%9A%E8%BF%9B%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u4E3A\u4EC0\u4E48\u9700\u8981\u591A\u8FDB\u7A0B</span><span class="suffix"></span></h3><ul><li>nodejs\u5355\u7EBF\u7A0B\uFF0C\u5728\u5904\u7406http\u8BF7\u6C42\u7684\u65F6\u5019\u4E00\u4E2A\u9519\u8BEF\u90FD\u4F1A\u5BFC\u81F4\u6574\u4E2A\u8FDB\u7A0B\u7684\u9000\u51FA\uFF0C\u8FD9\u662F\u707E\u96BE\u7EA7\u7684\u3002</li></ul><h3 id="%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%92%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%BB%8B%E7%BB%8D" tabindex="-1"><span class="prefix"></span><span class="content">\u591A\u8FDB\u7A0B\u548C\u591A\u7EBF\u7A0B\u4ECB\u7ECD</span><span class="suffix"></span></h3><blockquote><p>\u8FDB\u7A0B\u662F\u8D44\u6E90\u5206\u914D\u7684\u6700\u5C0F\u5355\u4F4D\uFF0C\u7EBF\u7A0B\u662FCPU\u8C03\u5EA6\u7684\u6700\u5C0F\u5355\u4F4D</p></blockquote><blockquote><p>\u201C\u8FDB\u7A0B\u2014\u2014\u8D44\u6E90\u5206\u914D\u7684\u6700\u5C0F\u5355\u4F4D\uFF0C\u7EBF\u7A0B\u2014\u2014\u7A0B\u5E8F\u6267\u884C\u7684\u6700\u5C0F\u5355\u4F4D\u201D</p></blockquote><p><strong>\u7EBF\u7A0B\u662F\u8FDB\u7A0B\u7684\u4E00\u4E2A\u6267\u884C\u6D41</strong>\uFF0C\u662FCPU\u8C03\u5EA6\u548C\u5206\u6D3E\u7684\u57FA\u672C\u5355\u4F4D\uFF0C\u5B83\u662F\u6BD4\u8FDB\u7A0B\u66F4\u5C0F\u7684\u80FD\u72EC\u7ACB\u8FD0\u884C\u7684\u57FA\u672C\u5355\u4F4D\u3002<strong>\u4E00\u4E2A\u8FDB\u7A0B\u7531\u51E0\u4E2A\u7EBF\u7A0B\u7EC4\u6210</strong>\uFF0C\u7EBF\u7A0B\u4E0E\u540C\u5C5E\u4E00\u4E2A\u8FDB\u7A0B\u7684\u5176\u4ED6\u7684\u7EBF\u7A0B\u5171\u4EAB\u8FDB\u7A0B\u6240\u62E5\u6709\u7684\u5168\u90E8\u8D44\u6E90\u3002</p><blockquote><p>\u4E00\u4E2A\u8FDB\u7A0B\u4E0B\u9762\u7684\u7EBF\u7A0B\u662F\u53EF\u4EE5\u53BB\u901A\u4FE1\u7684\uFF0C\u5171\u4EAB\u8D44\u6E90</p></blockquote><p><strong>\u8FDB\u7A0B\u6709\u72EC\u7ACB\u7684\u5730\u5740\u7A7A\u95F4</strong>\uFF0C\u4E00\u4E2A\u8FDB\u7A0B\u5D29\u6E83\u540E\uFF0C\u5728\u4FDD\u62A4\u6A21\u5F0F\u4E0B\u4E0D\u4F1A\u5BF9\u5176\u5B83\u8FDB\u7A0B\u4EA7\u751F\u5F71\u54CD\uFF0C\u800C\u7EBF\u7A0B\u53EA\u662F\u4E00\u4E2A\u8FDB\u7A0B\u4E2D\u7684\u4E0D\u540C\u6267\u884C\u8DEF\u5F84\u3002\u7EBF\u7A0B\u6709\u81EA\u5DF1\u7684\u5806\u6808\u548C\u5C40\u90E8\u53D8\u91CF\uFF0C\u4F46\u7EBF\u7A0B\u6CA1\u6709\u5355\u72EC\u7684\u5730\u5740\u7A7A\u95F4\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u6B7B\u6389\u5C31\u7B49\u4E8E\u6574\u4E2A\u8FDB\u7A0B\u6B7B\u6389\u3002</p><ul><li><p>\u8C37\u6B4C\u6D4F\u89C8\u5668</p><ul><li>\u8FDB\u7A0B\uFF1A \u4E00\u4E2Atab\u5C31\u662F\u4E00\u4E2A\u8FDB\u7A0B</li><li>\u7EBF\u7A0B\uFF1A \u4E00\u4E2Atab\u53C8\u7531\u591A\u4E2A\u7EBF\u7A0B\u7EC4\u6210\uFF0C\u6E32\u67D3\u7EBF\u7A0B\uFF0Cjs\u6267\u884C\u7EBF\u7A0B\uFF0C\u5783\u573E\u56DE\u6536\uFF0Cservice worker \u7B49\u7B49</li></ul></li><li><p>node\u670D\u52A1</p><p>ab\u662Fapache\u81EA\u5E26\u7684\u538B\u529B\u6D4B\u8BD5\u5DE5\u5177\u3002</p><p><code class="">ab -n1000 -c20 &#39;192.168.31.25:8000/&#39;</code></p><ul><li>\u8FDB\u7A0B\uFF1A\u76D1\u542C\u67D0\u4E00\u4E2A\u7AEF\u53E3\u7684http\u670D\u52A1</li><li>\u7EBF\u7A0B\uFF1A http\u670D\u52A1\u7531\u591A\u4E2A\u7EBF\u7A0B\u7EC4\u6210\uFF0C\u6BD4\u5982\uFF1A <ul><li>\u4E3B\u7EBF\u7A0B\uFF1A\u83B7\u53D6\u4EE3\u7801\u3001\u7F16\u8BD1\u6267\u884C</li><li>\u7F16\u8BD1\u7EBF\u7A0B\uFF1A\u4E3B\u7EBF\u7A0B\u6267\u884C\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u4F18\u5316\u4EE3\u7801</li><li>Profiler\u7EBF\u7A0B\uFF1A\u8BB0\u5F55\u54EA\u4E9B\u65B9\u6CD5\u8017\u65F6\uFF0C\u4E3A\u4F18\u5316\u63D0\u4F9B\u652F\u6301</li><li>\u5176\u4ED6\u7EBF\u7A0B\uFF1A\u7528\u4E8E\u5783\u573E\u56DE\u6536\u6E05\u9664\u5DE5\u4F5C\uFF0C\u56E0\u4E3A\u662F\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5E76\u884C\u6E05\u9664</li></ul></li></ul></li></ul><h3 id="%E5%88%B0%E5%BA%95%E9%80%89%E6%8B%A9%E5%A4%9A%E8%BF%9B%E7%A8%8B%E8%BF%98%E6%98%AF%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%9F" tabindex="-1"><span class="prefix"></span><span class="content">\u5230\u5E95\u9009\u62E9\u591A\u8FDB\u7A0B\u8FD8\u662F\u591A\u7EBF\u7A0B\uFF1F</span><span class="suffix"></span></h3><blockquote><p>\u591A\u8FDB\u7A0B\u8FD8\u662F\u591A\u7EBF\u7A0B\u4E00\u822C\u662F\u7ED3\u5408\u8D77\u6765\u4F7F\u7528\uFF0C\u5343\u4E07\u4E0D\u8981\u9677\u5165\u4E00\u79CD\u975E\u6B64\u5373\u5F7C\u7684\u8BEF\u533A\u3002</p></blockquote><img width="10000px" src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200313154504.png"><blockquote><p><strong>1\uFF09\u9700\u8981\u9891\u7E41\u521B\u5EFA\u9500\u6BC1\u7684\u4F18\u5148\u7528\u7EBF\u7A0B</strong></p><p>\u8FD9\u79CD\u539F\u5219\u6700\u5E38\u89C1\u7684\u5E94\u7528\u5C31\u662FWeb\u670D\u52A1\u5668\u4E86\uFF0C\u6765\u4E00\u4E2A\u8FDE\u63A5\u5EFA\u7ACB\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u65AD\u4E86\u5C31\u9500\u6BC1\u7EBF\u7A0B\uFF0C\u8981\u662F\u7528\u8FDB\u7A0B\uFF0C\u521B\u5EFA\u548C\u9500\u6BC1\u7684\u4EE3\u4EF7\u662F\u5F88\u96BE\u627F\u53D7\u7684</p><p><strong>2\uFF09\u9700\u8981\u8FDB\u884C\u5927\u91CF\u8BA1\u7B97\u7684\u4F18\u5148\u4F7F\u7528\u7EBF\u7A0B</strong></p><p>\u6240\u8C13\u5927\u91CF\u8BA1\u7B97\uFF0C\u5F53\u7136\u5C31\u662F\u8981\u8017\u8D39\u5F88\u591ACPU\uFF0C\u5207\u6362\u9891\u7E41\u4E86\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\u7EBF\u7A0B\u662F\u6700\u5408\u9002\u7684\u3002</p><p>\u8FD9\u79CD\u539F\u5219\u6700\u5E38\u89C1\u7684\u662F\u56FE\u50CF\u5904\u7406\u3001\u7B97\u6CD5\u5904\u7406\u3002</p><p><strong>3\uFF09\u5F3A\u76F8\u5173\u7684\u5904\u7406\u7528\u7EBF\u7A0B\uFF0C\u5F31\u76F8\u5173\u7684\u5904\u7406\u7528\u8FDB\u7A0B</strong></p><p>\u4EC0\u4E48\u53EB\u5F3A\u76F8\u5173\u3001\u5F31\u76F8\u5173\uFF1F\u7406\u8BBA\u4E0A\u5F88\u96BE\u5B9A\u4E49\uFF0C\u7ED9\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u5C31\u660E\u767D\u4E86\u3002</p><p>\u4E00\u822C\u7684Server\u9700\u8981\u5B8C\u6210\u5982\u4E0B\u4EFB\u52A1\uFF1A\u6D88\u606F\u6536\u53D1\u3001\u6D88\u606F\u5904\u7406\u3002\u201C\u6D88\u606F\u6536\u53D1\u201D\u548C\u201C\u6D88\u606F\u5904\u7406\u201D\u5C31\u662F\u5F31\u76F8\u5173\u7684\u4EFB\u52A1\uFF0C\u800C\u201C\u6D88\u606F\u5904\u7406\u201D\u91CC\u9762\u53EF\u80FD\u53C8\u5206\u4E3A\u201C\u6D88\u606F\u89E3\u7801\u201D\u3001\u201C\u4E1A\u52A1\u5904\u7406\u201D\uFF0C\u8FD9\u4E24\u4E2A\u4EFB\u52A1\u76F8\u5BF9\u6765\u8BF4\u76F8\u5173\u6027\u5C31\u8981\u5F3A\u591A\u4E86\u3002\u56E0\u6B64\u201C\u6D88\u606F\u6536\u53D1\u201D\u548C\u201C\u6D88\u606F\u5904\u7406\u201D\u53EF\u4EE5\u5206\u8FDB\u7A0B\u8BBE\u8BA1\uFF0C\u201C\u6D88\u606F\u89E3\u7801\u201D\u3001\u201C\u4E1A\u52A1\u5904\u7406\u201D\u53EF\u4EE5\u5206\u7EBF\u7A0B\u8BBE\u8BA1\u3002</p><p><strong>4\uFF09\u53EF\u80FD\u8981\u6269\u5C55\u5230\u591A\u673A\u5206\u5E03\u7684\u7528\u8FDB\u7A0B\uFF0C\u591A\u6838\u5206\u5E03\u7684\u7528\u7EBF\u7A0B</strong></p><p><strong>5\uFF09\u90FD\u6EE1\u8DB3\u9700\u6C42\u7684\u60C5\u51B5\u4E0B\uFF0C\u7528\u4F60\u6700\u719F\u6089\u3001\u6700\u62FF\u624B\u7684\u65B9\u5F0F</strong></p></blockquote><p><strong>\u603B\u7ED3\uFF1A \u7EBF\u7A0B\u5FEB\u800C\u8FDB\u7A0B\u53EF\u9760\u6027\u9AD8\u3002</strong></p><h3 id="nodejs%E5%A4%9A%E7%BA%BF%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">nodejs\u591A\u7EBF\u7A0B</span><span class="suffix"></span></h3><blockquote><p>\u4F34\u968F10.5.0\u7684\u53D1\u5E03\uFF0CNode.js \u65B0\u589E\u4E86\u5BF9\u591A\u7EBF\u7A0B\u7684\u5B9E\u9A8C\u6027\u652F\u6301\uFF08worker_threads\u6A21\u5757\uFF09\u30022018\u5E74</p><p>nodejs\u4E3B\u6D41\u8FD8\u662F\u53EA\u6709\u591A\u8FDB\u7A0B\u7684\u65B9\u6848\uFF0C\u591A\u7EBF\u7A0B\u53EF\u4EE5\u7B49api\u7A33\u5B9A\u4E4B\u540E\u518D\u4F7F\u7528\u3002</p></blockquote><h3 id="%E5%88%9B%E5%BB%BA%E5%A4%9A%E8%BF%9B%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u521B\u5EFA\u591A\u8FDB\u7A0B</span><span class="suffix"></span></h3><h4 id="%E5%88%A9%E7%94%A8cluster%E5%BC%80%E5%90%AF%E5%A4%9A%E8%BF%9B%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u5229\u7528cluster\u5F00\u542F\u591A\u8FDB\u7A0B</span><span class="suffix"></span></h4><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> cluster <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> numCPUs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token comment">// \u83B7\u53D6CPU\u7684\u4E2A\u6570</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>cluster<span class="token punctuation">.</span>isMaster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numCPUs<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    cluster<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  cluster<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">worker<span class="token punctuation">,</span> code<span class="token punctuation">,</span> signal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">worker </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>worker<span class="token punctuation">.</span>process<span class="token punctuation">.</span>pid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> died</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
  http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;hello world\\n&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u7A0D\u5FAE\u4F18\u5316\u4E0B\uFF1A</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">var</span> cluster <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> numCPUs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cpus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
 
<span class="token keyword">if</span> <span class="token punctuation">(</span>cluster<span class="token punctuation">.</span>isMaster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span> numCPUs<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cluster<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5176\u5B83\u4EE3\u7801</span>
    
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./app.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%92%8C%E5%8D%95%E8%BF%9B%E7%A8%8B%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94" tabindex="-1"><span class="prefix"></span><span class="content">\u591A\u8FDB\u7A0B\u548C\u5355\u8FDB\u7A0B\u6027\u80FD\u5BF9\u6BD4</span><span class="suffix"></span></h4><blockquote><p>\u591A\u8FDB\u7A0B\u7684\u6027\u80FD\u8981\u660E\u663E\u597D\u4E8E\u5355\u8FDB\u7A0B</p></blockquote><p>ab\u662Fapache\u81EA\u5E26\u7684\u538B\u529B\u6D4B\u8BD5\u5DE5\u5177\u3002\u63A8\u8350\u5927\u5BB6\u7528mac</p><p><code class="">ab -n1000 -c20 &#39;192.168.31.25:8000/&#39;</code></p><ul><li>n \u8BF7\u6C42\u6570\u91CF</li><li>c \u5E76\u53D1\u6570</li></ul><h4 id="nodejs%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95" tabindex="-1"><span class="prefix"></span><span class="content">nodejs\u8C03\u8BD5\u65B9\u6CD5</span><span class="suffix"></span></h4><p><a href="https://code.visualstudio.com/Docs/editor/debugging" target="_blank" rel="noopener">https://code.visualstudio.com/Docs/editor/debugging</a></p><p><code class="">vscode\u7684 .vscode\u6587\u4EF6\u4E0B\u9762\u914D\u7F6E launch.json</code></p><div class="language-json ext-json code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-json line-numbers-mode"><code class="language-json"><span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528 IntelliSense \u4E86\u89E3\u76F8\u5173\u5C5E\u6027\u3002</span>
    <span class="token comment">// \u60AC\u505C\u4EE5\u67E5\u770B\u73B0\u6709\u5C5E\u6027\u7684\u63CF\u8FF0\u3002</span>
    <span class="token comment">// \u6B32\u4E86\u89E3\u66F4\u591A\u4FE1\u606F\uFF0C\u8BF7\u8BBF\u95EE: https://go.microsoft.com/fwlink/?linkid=830387</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.2.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;configurations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>

        <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token string">&quot;launch&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Launch Program&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;program&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${workspaceFolder}/chapter4/http_cluster.js&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="cluster%E7%9B%B8%E5%85%B3api" tabindex="-1"><span class="prefix"></span><span class="content">cluster\u76F8\u5173API</span><span class="suffix"></span></h3><p><strong>Process \u8FDB\u7A0B \u3001child_process \u5B50\u8FDB\u7A0B \u3001Cluster \u96C6\u7FA4</strong></p><h4 id="process%E8%BF%9B%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">process\u8FDB\u7A0B</span><span class="suffix"></span></h4><blockquote><p>process \u5BF9\u8C61\u662F Node \u7684\u4E00\u4E2A\u5168\u5C40\u5BF9\u8C61\uFF0C\u63D0\u4F9B\u5F53\u524D Node \u8FDB\u7A0B\u7684\u4FE1\u606F\uFF0C\u4ED6\u53EF\u4EE5\u5728\u811A\u672C\u7684\u4EFB\u610F\u4F4D\u7F6E\u4F7F\u7528\uFF0C\u4E0D\u5FC5\u901A\u8FC7 require \u547D\u4EE4\u52A0\u8F7D\u3002</p></blockquote><p><strong>\u5C5E\u6027</strong></p><ol><li><strong>process.argv</strong> \u5C5E\u6027\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542B\u4E86\u542F\u52A8 node \u8FDB\u7A0B\u65F6\u7684\u547D\u4EE4\u884C\u53C2\u6570</li><li><strong>process.env</strong> \u8FD4\u56DE\u5305\u542B\u7528\u6237\u73AF\u5883\u4FE1\u606F\u7684\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u5728 \u811A\u672C\u4E2D\u5BF9\u8FD9\u4E2A\u5BF9\u8C61\u8FDB\u884C\u589E\u5220\u6539\u67E5\u7684\u64CD\u4F5C</li><li><strong>process.pid</strong> \u8FD4\u56DE\u5F53\u524D\u8FDB\u7A0B\u7684\u8FDB\u7A0B\u53F7</li><li><strong>process.platform</strong> \u8FD4\u56DE\u5F53\u524D\u7684\u64CD\u4F5C\u7CFB\u7EDF</li><li><strong>process.version</strong> \u8FD4\u56DE\u5F53\u524D node \u7248\u672C</li></ol><p><strong>\u65B9\u6CD5</strong></p><ol><li><strong>process.cwd()</strong> \u8FD4\u56DE node.js \u8FDB\u7A0B\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55</li><li>process.chdir() \u53D8\u66F4 node.js \u8FDB\u7A0B\u7684\u5DE5\u4F5C\u76EE\u5F55</li><li><strong>process.nextTick(fn)</strong> \u5C06\u4EFB\u52A1\u653E\u5230\u5F53\u524D\u4E8B\u4EF6\u5FAA\u73AF\u7684\u5C3E\u90E8\uFF0C\u6DFB\u52A0\u5230 \u2018next tick\u2019 \u961F\u5217\uFF0C\u4E00\u65E6\u5F53\u524D\u4E8B\u4EF6\u8F6E\u8BE2\u961F\u5217\u7684\u4EFB\u52A1\u5168\u90E8\u5B8C\u6210\uFF0C\u5728 next tick \u961F\u5217\u4E2D\u7684\u6240\u6709 callback \u4F1A\u88AB\u4F9D\u6B21\u8C03\u7528</li><li><strong>process.exit()</strong> \u9000\u51FA\u5F53\u524D\u8FDB\u7A0B\uFF0C\u5F88\u591A\u65F6\u5019\u662F\u4E0D\u9700\u8981\u7684</li><li>process.kill(pid[,signal]) \u7ED9\u6307\u5B9A\u8FDB\u7A0B\u53D1\u9001\u4FE1\u53F7\uFF0C\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u7ED3\u675F\u8FDB\u7A0B</li></ol><p><strong>\u4E8B\u4EF6</strong></p><ol><li><p>beforeExit \u4E8B\u4EF6\uFF0C\u5728 Node \u6E05\u7A7A\u4E86 EventLoop \u4E4B\u540E\uFF0C\u518D\u6CA1\u6709\u4EFB\u4F55\u5F85\u5904\u7406\u4EFB\u52A1\u65F6\u89E6\u53D1\uFF0C\u53EF\u4EE5\u5728\u8FD9\u91CC\u518D\u90E8\u7F72\u4E00\u4E9B\u4EFB\u52A1\uFF0C\u4F7F\u5F97 Node \u8FDB\u7A0B\u4E0D\u9000\u51FA\uFF0C\u663E\u793A\u7684\u7EC8\u6B62\u7A0B\u5E8F\u65F6\uFF08process.exit()\uFF09\uFF0C\u4E0D\u4F1A\u89E6\u53D1</p></li><li><p>exit \u4E8B\u4EF6\uFF0C\u5F53\u524D\u8FDB\u7A0B\u9000\u51FA\u65F6\u89E6\u53D1\uFF0C\u56DE\u8C03\u51FD\u6570\u4E2D\u53EA\u5141\u8BB8\u540C\u6B65\u64CD\u4F5C\uFF0C\u56E0\u4E3A\u6267\u884C\u5B8C\u56DE\u8C03\u540E\uFF0C\u8FDB\u7A0B\u91D1\u8F89\u9000\u51FA</p></li><li><p><strong>uncaughtException</strong> \u4E8B\u4EF6\uFF0C\u5F53\u524D\u8FDB\u7A0B\u629B\u51FA\u4E00\u4E2A\u6CA1\u6709\u6355\u83B7\u7684\u9519\u8BEF\u65F6\u89E6\u53D1\uFF0C\u53EF\u4EE5\u7528\u5B83\u5728\u8FDB\u7A0B\u7ED3\u675F\u524D\u8FDB\u884C\u4E00\u4E9B\u5DF2\u5206\u914D\u8D44\u6E90\u7684\u540C\u6B65\u6E05\u7406\u64CD\u4F5C\uFF0C\u5C1D\u8BD5\u7528\u5B83\u6765\u6062\u590D\u5E94\u7528\u7684\u6B63\u5E38\u8FD0\u884C\u7684\u64CD\u4F5C\u662F\u4E0D\u5B89\u5168\u7684</p><blockquote><p>\u91CD\u70B9\u5173\u6CE8</p></blockquote></li><li><p>warning \u4E8B\u4EF6\uFF0C\u4EFB\u4F55 Node.js \u53D1\u51FA\u7684\u8FDB\u7A0B\u8B66\u544A\uFF0C\u90FD\u4F1A\u89E6\u53D1\u6B64\u4E8B\u4EF6</p></li></ol><h4 id="child_process" tabindex="-1"><span class="prefix"></span><span class="content">child_process</span><span class="suffix"></span></h4><blockquote><p>nodejs\u4E2D\u7528\u4E8E\u521B\u5EFA\u5B50\u8FDB\u7A0B\u7684\u6A21\u5757\uFF0Cnode\u4E2D\u5927\u540D\u9F0E\u9F0E\u7684cluster\u662F\u57FA\u4E8E\u5B83\u6765\u5C01\u88C5\u7684\u3002</p></blockquote><ol><li><strong>exec()</strong></li></ol><p>\u5F02\u6B65\u884D\u751F\u51FA\u4E00\u4E2A shell\uFF0C\u7136\u540E\u5728 shell \u4E2D\u6267\u884C\u547D\u4EE4\uFF0C\u4E14\u7F13\u51B2\u4EFB\u4F55\u4EA7\u751F\u7684\u8F93\u51FA\uFF0C\u8FD0\u884C\u7ED3\u675F\u540E\u8C03\u7528\u56DE\u8C03\u51FD\u6570</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec

<span class="token keyword">const</span> ls <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;ls -c&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>stack<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error code: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Child Process STDOUT: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stdout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u7531\u4E8E\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\u90FD\u662F\u6D41\u5BF9\u8C61\uFF08stream\uFF09\uFF0C\u53EF\u4EE5\u76D1\u542Cdata\u4E8B\u4EF6\uFF0C\u56E0\u6B64\u4E0A\u9762\u7684\u4EE3\u7801\u4E5F\u53EF\u4EE5\u5199\u6210\u4E0B\u9762\u8FD9\u6837\u3002</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">)</span>

child<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
child<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
child<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">closing code: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u8FD8\u6709\u4E00\u4E2A\u597D\u5904\u3002\u76D1\u542Cdata\u4E8B\u4EF6\u4EE5\u540E\uFF0C\u53EF\u4EE5\u5B9E\u65F6\u8F93\u51FA\u7ED3\u679C\uFF0C\u5426\u5219\u53EA\u6709\u7B49\u5230\u5B50\u8FDB\u7A0B\u7ED3\u675F\uFF0C\u624D\u4F1A\u8F93\u51FA\u7ED3\u679C\u3002\u6240\u4EE5\uFF0C\u5982\u679C\u5B50\u8FDB\u7A0B\u8FD0\u884C\u65F6\u95F4\u8F83\u957F\uFF0C\u6216\u8005\u662F\u6301\u7EED\u8FD0\u884C\uFF0C\u7B2C\u4E8C\u79CD\u5199\u6CD5\u66F4\u597D\u3002</p><ol start="2"><li><strong>execSync()</strong></li></ol><p>exec()\u7684\u540C\u6B65\u7248\u672C</p><ol start="3"><li><strong>execFile()</strong></li></ol><p>execFile\u65B9\u6CD5\u76F4\u63A5\u6267\u884C\u7279\u5B9A\u7684\u7A0B\u5E8Fshell\uFF0C\u53C2\u6570\u4F5C\u4E3A\u6570\u7EC4\u4F20\u5165\uFF0C\u4E0D\u4F1A\u88ABbash\u89E3\u91CA\uFF0C\u56E0\u6B64\u5177\u6709\u8F83\u9AD8\u7684\u5B89\u5168\u6027\u3002</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> execFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>
<span class="token function">execFile</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;-c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">exec error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stdout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stderr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="4"><li><strong>spawn()</strong></li></ol><p>spawn\u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u6765\u6267\u884C\u7279\u5B9A\u547D\u4EE4shell\uFF0C\u7528\u6CD5\u4E0EexecFile\u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u4F46\u662F\u6CA1\u6709\u56DE\u8C03\u51FD\u6570\uFF0C\u53EA\u80FD\u901A\u8FC7\u76D1\u542C\u4E8B\u4EF6\uFF0C\u6765\u83B7\u53D6\u8FD0\u884C\u7ED3\u679C\u3002\u5B83\u5C5E\u4E8E\u5F02\u6B65\u6267\u884C\uFF0C\u9002\u7528\u4E8E\u5B50\u8FDB\u7A0B\u957F\u65F6\u95F4\u8FD0\u884C\u7684\u60C5\u51B5\u3002</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;-c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;UTF-8&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

child<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
child<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">closing code: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>spawn\u8FD4\u56DE\u7684\u7ED3\u679C\u662FBuffer\u9700\u8981\u8F6C\u6362\u4E3Autf8</p></blockquote><ol start="5"><li><strong>fork()</strong></li></ol><p>fork\u65B9\u6CD5\u76F4\u63A5\u521B\u5EFA\u4E00\u4E2A\u5B50\u8FDB\u7A0B\uFF0C\u6267\u884CNode\u811A\u672C\uFF0C<code class="">fork(&#39;./child.js&#39;)</code> \u76F8\u5F53\u4E8E <code class="">spawn(&#39;node&#39;, [&#39;./child.js&#39;])</code> \u3002\u4E0Espawn\u65B9\u6CD5\u4E0D\u540C\u7684\u662F\uFF0Cfork\u4F1A\u5728\u7236\u8FDB\u7A0B\u4E0E\u5B50\u8FDB\u7A0B\u4E4B\u95F4\uFF0C\u5EFA\u7ACB\u4E00\u4E2A\u901A\u4FE1\u7BA1\u9053pipe\uFF0C\u7528\u4E8E\u8FDB\u7A0B\u4E4B\u95F4\u7684\u901A\u4FE1,\u4E5F\u662FIPC\u901A\u4FE1\u7684\u57FA\u7840\u3002</p><p><code class="">main.js</code></p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> child_process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> child <span class="token operator">=</span> child_process<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./child.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
child<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E3B\u7EBF\u7A0B\u6536\u5230\u6D88\u606F&#39;</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
child<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">hello</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code class="">child.js</code></p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5B50\u8FDB\u7A0B\u6536\u5230\u6D88\u606F&#39;</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
process<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="cluster" tabindex="-1"><span class="prefix"></span><span class="content">cluster</span><span class="suffix"></span></h4><p>node\u8FDB\u884C\u591A\u8FDB\u7A0B\u7684\u6A21\u5757</p><p><strong>\u5C5E\u6027\u548C\u65B9\u6CD5</strong></p><ol><li><strong>isMaster</strong> \u5C5E\u6027\uFF0C\u8FD4\u56DE\u8BE5\u8FDB\u7A0B\u662F\u4E0D\u662F\u4E3B\u8FDB\u7A0B</li><li><strong>isWorker</strong> \u5C5E\u6027\uFF0C\u8FD4\u56DE\u8BE5\u8FDB\u7A0B\u662F\u4E0D\u662F\u5DE5\u4F5C\u8FDB\u7A0B</li><li><strong>fork()</strong> \u65B9\u6CD5\uFF0C\u53EA\u80FD\u901A\u8FC7\u4E3B\u8FDB\u7A0B\u8C03\u7528\uFF0C\u884D\u751F\u51FA\u4E00\u4E2A\u65B0\u7684 worker \u8FDB\u7A0B\uFF0C\u8FD4\u56DE\u4E00\u4E2A worker \u5BF9\u8C61\u3002\u548Cprocess.child\u7684\u533A\u522B\uFF0C\u4E0D\u7528\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684child.js</li><li>setupMaster([settings]) \u65B9\u6CD5\uFF0C\u7528\u4E8E\u4FEE\u6539 fork() \u9ED8\u8BA4\u884C\u4E3A\uFF0C\u4E00\u65E6\u8C03\u7528\uFF0C\u5C06\u4F1A\u6309\u7167cluster.settings\u8FDB\u884C\u8BBE\u7F6E\u3002</li><li>settings \u5C5E\u6027\uFF0C\u7528\u4E8E\u914D\u7F6E\uFF0C\u53C2\u6570 exec: worker\u6587\u4EF6\u8DEF\u5F84\uFF1Bargs: \u4F20\u9012\u7ED9 worker \u7684\u53C2\u6570\uFF1BexecArgv: \u4F20\u9012\u7ED9 Node.js \u53EF\u6267\u884C\u6587\u4EF6\u7684\u53C2\u6570\u5217\u8868</li></ol><p><strong>\u4E8B\u4EF6</strong></p><ol><li><strong>fork</strong> \u4E8B\u4EF6\uFF0C\u5F53\u65B0\u7684\u5DE5\u4F5C\u8FDB\u7A0B\u88AB fork \u65F6\u89E6\u53D1\uFF0C\u53EF\u4EE5\u7528\u6765\u8BB0\u5F55\u5DE5\u4F5C\u8FDB\u7A0B\u6D3B\u52A8</li><li><strong>listening</strong> \u4E8B\u4EF6\uFF0C\u5F53\u4E00\u4E2A\u5DE5\u4F5C\u8FDB\u7A0B\u8C03\u7528 listen() \u540E\u89E6\u53D1\uFF0C\u4E8B\u4EF6\u5904\u7406\u5668\u4E24\u4E2A\u53C2\u6570 worker\uFF1A\u5DE5\u4F5C\u8FDB\u7A0B\u5BF9\u8C61</li><li><strong>message</strong>\u4E8B\u4EF6\uFF0C \u6BD4\u8F83\u7279\u6B8A\u9700\u8981\u53BB\u5728\u5355\u72EC\u7684worker\u4E0A\u76D1\u542C\u3002</li><li>online \u4E8B\u4EF6\uFF0C\u590D\u5236\u597D\u4E00\u4E2A\u5DE5\u4F5C\u8FDB\u7A0B\u540E\uFF0C\u5DE5\u4F5C\u8FDB\u7A0B\u4E3B\u52A8\u53D1\u9001\u4E00\u6761 online \u6D88\u606F\u7ED9\u4E3B\u8FDB\u7A0B\uFF0C\u4E3B\u8FDB\u7A0B\u6536\u5230\u6D88\u606F\u540E\u89E6\u53D1\uFF0C\u56DE\u8C03\u53C2\u6570 worker \u5BF9\u8C61</li><li><strong>disconnect</strong> \u4E8B\u4EF6\uFF0C\u4E3B\u8FDB\u7A0B\u548C\u5DE5\u4F5C\u8FDB\u7A0B\u4E4B\u95F4 IPC \u901A\u9053\u65AD\u5F00\u540E\u89E6\u53D1</li><li><strong>exit</strong> \u4E8B\u4EF6\uFF0C\u6709\u5DE5\u4F5C\u8FDB\u7A0B\u9000\u51FA\u65F6\u89E6\u53D1\uFF0C\u56DE\u8C03\u53C2\u6570 worker \u5BF9\u8C61\u3001code \u9000\u51FA\u7801\u3001signal \u8FDB\u7A0B\u88AB kill \u65F6\u7684\u4FE1\u53F7</li><li>setup \u4E8B\u4EF6\uFF0Ccluster.setupMaster() \u6267\u884C\u540E\u89E6\u53D1</li></ol><p><strong>\u6587\u6863\u5730\u5740\uFF1A</strong></p><p><a href="https://nodejs.org/api/child_process.html" target="_blank" rel="noopener">https://nodejs.org/api/child_process.html</a> \u591A\u770B\u6587\u6863\uFF01</p><p><strong>cluster\u591A\u8FDB\u7A0B\u6A21\u578B</strong></p><p>\u6BCF\u4E2Aworker\u8FDB\u7A0B\u901A\u8FC7\u4F7F\u7528child_process.fork()\u51FD\u6570\uFF0C\u57FA\u4E8EIPC\uFF08Inter-Process Communication\uFF0C\u8FDB\u7A0B\u95F4\u901A\u4FE1\uFF09\uFF0C\u5B9E\u73B0\u4E0Emaster\u8FDB\u7A0B\u95F4\u901A\u4FE1\u3002</p><p><strong>\u90A3\u6211\u4EEC\u76F4\u63A5\u7528child_process.fork()\u81EA\u5DF1\u5B9E\u73B0\u4E0D\u5C31\u884C\u4E86\uFF0C\u5E72\u561B\u9700\u8981cluster\u5462?</strong></p><p>\u8FD9\u6837\u7684\u65B9\u5F0F\u4EC5\u4EC5\u5B9E\u73B0\u4E86\u591A\u8FDB\u7A0B\u3002\u591A\u8FDB\u7A0B\u8FD0\u884C\u8FD8\u6D89\u53CA\u7236\u5B50\u8FDB\u7A0B\u901A\u4FE1\uFF0C\u5B50\u8FDB\u7A0B\u7BA1\u7406\uFF0C\u4EE5\u53CA\u8D1F\u8F7D\u5747\u8861\u7B49\u95EE\u9898\uFF0C\u8FD9\u4E9B\u7279\u6027cluster\u5E2E\u4F60\u5B9E\u73B0\u4E86\u3002</p><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200313154505.png" alt="image-20190530231222075"></figure><h4 id="%E6%9C%80%E5%88%9D%E7%9A%84%E5%A4%9A%E8%BF%9B%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u6700\u521D\u7684\u591A\u8FDB\u7A0B\u6A21\u578B</span><span class="suffix"></span></h4><p>\u6700\u521D\u7684 Node.js \u591A\u8FDB\u7A0B\u6A21\u578B\u5C31\u662F\u8FD9\u6837\u5B9E\u73B0\u7684\uFF0Cmaster \u8FDB\u7A0B\u521B\u5EFA socket\uFF0C\u7ED1\u5B9A\u5230\u67D0\u4E2A\u5730\u5740\u4EE5\u53CA\u7AEF\u53E3\u540E\uFF0C\u81EA\u8EAB\u4E0D\u8C03\u7528 listen \u6765\u76D1\u542C\u8FDE\u63A5\u4EE5\u53CA accept \u8FDE\u63A5\uFF0C\u800C\u662F\u5C06\u8BE5 socket \u7684 fd \u4F20\u9012\u5230 fork \u51FA\u6765\u7684 worker \u8FDB\u7A0B\uFF0Cworker \u63A5\u6536\u5230 fd \u540E\u518D\u8C03\u7528 listen\uFF0Caccept \u65B0\u7684\u8FDE\u63A5\u3002\u4F46\u5B9E\u9645\u4E00\u4E2A\u65B0\u5230\u6765\u7684\u8FDE\u63A5\u6700\u7EC8\u53EA\u80FD\u88AB\u67D0\u4E00\u4E2A worker \u8FDB\u7A0B accpet \u518D\u505A\u5904\u7406\uFF0C\u81F3\u4E8E\u662F\u54EA\u4E2A worker \u80FD\u591F accept \u5230\uFF0C\u5F00\u53D1\u8005\u5B8C\u5168\u65E0\u6CD5\u9884\u77E5\u4EE5\u53CA\u5E72\u9884\u3002\u8FD9\u52BF\u5FC5\u5C31\u5BFC\u81F4\u4E86\u5F53\u4E00\u4E2A\u65B0\u8FDE\u63A5\u5230\u6765\u65F6\uFF0C\u591A\u4E2A worker \u8FDB\u7A0B\u4F1A\u4EA7\u751F\u7ADE\u4E89\uFF0C\u6700\u7EC8\u7531\u80DC\u51FA\u7684 worker \u83B7\u53D6\u8FDE\u63A5\u3002</p><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200313154506.png" alt="image-20190530231552279"></figure><p>\u76F8\u4FE1\u5230\u8FD9\u91CC\u5927\u5BB6\u4E5F\u5E94\u8BE5\u77E5\u9053\u8FD9\u79CD\u591A\u8FDB\u7A0B\u6A21\u578B\u6BD4\u8F83\u660E\u663E\u7684\u95EE\u9898\u4E86</p><ul><li>\u591A\u4E2A\u8FDB\u7A0B\u4E4B\u95F4\u4F1A\u7ADE\u4E89 accpet \u4E00\u4E2A\u8FDE\u63A5\uFF0C\u4EA7\u751F\u60CA\u7FA4\u73B0\u8C61\uFF0C\u6548\u7387\u6BD4\u8F83\u4F4E\u3002</li><li>\u7531\u4E8E\u65E0\u6CD5\u63A7\u5236\u4E00\u4E2A\u65B0\u7684\u8FDE\u63A5\u7531\u54EA\u4E2A\u8FDB\u7A0B\u6765\u5904\u7406\uFF0C\u5FC5\u7136\u5BFC\u81F4\u5404 worker \u8FDB\u7A0B\u4E4B\u95F4\u7684\u8D1F\u8F7D\u975E\u5E38\u4E0D\u5747\u8861\u3002</li></ul><p>\u8FD9\u5176\u5B9E\u5C31\u662F\u8457\u540D\u7684\u201D\u60CA\u7FA4\u201D\u73B0\u8C61\u3002</p><p>\u7B80\u5355\u8BF4\u6765\uFF0C\u591A\u7EBF\u7A0B/\u591A\u8FDB\u7A0B\u7B49\u5F85\u540C\u4E00\u4E2A socket \u4E8B\u4EF6\uFF0C\u5F53\u8FD9\u4E2A\u4E8B\u4EF6\u53D1\u751F\u65F6\uFF0C\u8FD9\u4E9B\u7EBF\u7A0B/\u8FDB\u7A0B\u88AB\u540C\u65F6\u5524\u9192\uFF0C\u5C31\u662F\u60CA\u7FA4\u3002\u53EF\u4EE5\u60F3\u89C1\uFF0C\u6548\u7387\u5F88\u4F4E\u4E0B\uFF0C\u8BB8\u591A\u8FDB\u7A0B\u88AB\u5185\u6838\u91CD\u65B0\u8C03\u5EA6\u5524\u9192\uFF0C\u540C\u65F6\u53BB\u54CD\u5E94\u8FD9\u4E00\u4E2A\u4E8B\u4EF6\uFF0C\u5F53\u7136\u53EA\u6709\u4E00\u4E2A\u8FDB\u7A0B\u80FD\u5904\u7406\u4E8B\u4EF6\u6210\u529F\uFF0C\u5176\u4ED6\u7684\u8FDB\u7A0B\u5728\u5904\u7406\u8BE5\u4E8B\u4EF6\u5931\u8D25\u540E\u91CD\u65B0\u4F11\u7720\uFF08\u4E5F\u6709\u5176\u4ED6\u9009\u62E9\uFF09\u3002\u8FD9\u79CD\u6027\u80FD\u6D6A\u8D39\u73B0\u8C61\u5C31\u662F\u60CA\u7FA4\u3002</p><p><strong>\u60CA\u7FA4</strong>\u901A\u5E38\u53D1\u751F\u5728 server \u4E0A\uFF0C\u5F53\u7236\u8FDB\u7A0B\u7ED1\u5B9A\u4E00\u4E2A\u7AEF\u53E3\u76D1\u542C socket\uFF0C\u7136\u540E fork \u51FA\u591A\u4E2A\u5B50\u8FDB\u7A0B\uFF0C\u5B50\u8FDB\u7A0B\u4EEC\u5F00\u59CB\u5FAA\u73AF\u5904\u7406\uFF08\u6BD4\u5982 accept\uFF09\u8FD9\u4E2A socket\u3002\u6BCF\u5F53\u7528\u6237\u53D1\u8D77\u4E00\u4E2A TCP \u8FDE\u63A5\u65F6\uFF0C\u591A\u4E2A\u5B50\u8FDB\u7A0B\u540C\u65F6\u88AB\u5524\u9192\uFF0C\u7136\u540E\u5176\u4E2D\u4E00\u4E2A\u5B50\u8FDB\u7A0B accept \u65B0\u8FDE\u63A5\u6210\u529F\uFF0C\u4F59\u8005\u7686\u5931\u8D25\uFF0C\u91CD\u65B0\u4F11\u7720\u3002</p><blockquote><p>http.Server\u7EE7\u627F\u4E86net.Server, http\u5BA2\u6237\u7AEF\u4E0Ehttp\u670D\u52A1\u7AEF\u7684\u901A\u4FE1\u5747\u4F9D\u8D56\u4E8Esocket\uFF08net.Socket\uFF09\u3002</p></blockquote><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> net <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;net&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fork <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fork

<span class="token keyword">const</span> handle <span class="token operator">=</span> net<span class="token punctuation">.</span><span class="token function">_createServerHandle</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;11111111111111111111111111&#39;</span><span class="token punctuation">)</span>
  <span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&#39;./worker&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> handle<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> net <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;net&#39;</span><span class="token punctuation">)</span>
process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> handle</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">start</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> buf <span class="token operator">=</span> <span class="token string">&#39;hello nodejs&#39;</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token punctuation">[</span><span class="token string">&#39;HTTP/1.1 200 OK&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">content-length:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buf<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\r\\n&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\r\\n\\r\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buf<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token parameter">server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  server<span class="token punctuation">.</span><span class="token function-variable function">onconnection</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> handle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pid <span class="token operator">=</span> process<span class="token punctuation">.</span>pid
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">[</span>pid<span class="token punctuation">]</span><span class="token punctuation">)</span>
      data<span class="token punctuation">[</span>pid<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>

    data<span class="token punctuation">[</span>pid<span class="token punctuation">]</span><span class="token operator">++</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;got a connection on worker, pid = %d&#39;</span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>pid<span class="token punctuation">,</span> data<span class="token punctuation">[</span>pid<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">net<span class="token punctuation">.</span>Socket</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      handle<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    socket<span class="token punctuation">.</span>readable <span class="token operator">=</span> socket<span class="token punctuation">.</span>writable <span class="token operator">=</span> <span class="token boolean">true</span>
    socket<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200313154507.png" alt="image-20190602164750971"></figure><h4 id="nginx-proxy" tabindex="-1"><span class="prefix"></span><span class="content">nginx proxy</span><span class="suffix"></span></h4><blockquote><p>Nginx \u662F\u4FC4\u7F57\u65AF\u4EBA\u7F16\u5199\u7684\u5341\u5206\u8F7B\u91CF\u7EA7\u7684 HTTP \u670D\u52A1\u5668,Nginx\uFF0C\u5B83\u7684\u53D1\u97F3\u4E3A\u201Cengine X\u201D\uFF0C\u662F\u4E00\u4E2A\u9AD8\u6027\u80FD\u7684HTTP\u548C\u53CD\u5411\u4EE3\u7406\u670D\u52A1\u5668\u3002\u5F02\u6B65\u975E\u963B\u585EI/O\uFF0C\u800C\u4E14\u80FD\u591F\u9AD8\u5E76\u53D1\u3002</p><p>\u6B63\u5411\u4EE3\u7406\uFF1A \u5BA2\u6237\u7AEF\u4E3A\u4EE3\u7406\uFF0C\u670D\u52A1\u5668\u4E0D\u77E5\u9053\u5BA2\u6237\u7AEF\u662F\u8C01\u3002</p><p>\u53CD\u5411\u4EE3\u7406\uFF1A \u670D\u52A1\u5668\u4E3A\u4EE3\u7406\uFF0C\u5BA2\u6237\u7AEF\u4E0D\u77E5\u9053\u670D\u52A1\u5668\u662F\u8C01\u3002</p></blockquote><p>nginx\u914D\u7F6Edemo\uFF1A</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">http <span class="token punctuation">{</span> 
  upstream cluster <span class="token punctuation">{</span> 
 		  server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">;</span>   <span class="token comment">// \u6302\u6389</span>
      server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3001</span><span class="token punctuation">;</span>   <span class="token comment">// \u6302\u6389</span>
      server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3002</span><span class="token punctuation">;</span> 
      server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3003</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span> 
  server <span class="token punctuation">{</span> 
       listen <span class="token number">80</span><span class="token punctuation">;</span> 
       server_name www<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>com<span class="token punctuation">;</span> 
       location <span class="token operator">/</span> <span class="token punctuation">{</span> 
            proxy_pass http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cluster<span class="token punctuation">;</span>
       <span class="token punctuation">}</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>nginx\u7684\u5B9E\u9645\u5E94\u7528\u573A\u666F\uFF1A\u6BD4\u8F83\u9002\u5408\u7A33\u5B9A\u7684\u670D\u52A1</p><ul><li>\u9759\u6001\u8D44\u6E90\u670D\u52A1\u5668\uFF1A js, css, html</li><li>\u4F01\u4E1A\u7EA7\u96C6\u7FA4</li></ul><blockquote><p>\u5B88\u62A4\u8FDB\u7A0B\uFF1A \u9000\u51FA\u547D\u4EE4\u884C\u7A97\u53E3\u4E4B\u540E\uFF0C\u670D\u52A1\u4E00\u76F4\u5904\u4E8E\u8FD0\u884C\u72B6\u6001</p></blockquote><h4 id="cluster%E5%A4%9A%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E6%A8%A1%E5%9E%8B" tabindex="-1"><span class="prefix"></span><span class="content">cluster\u591A\u8FDB\u7A0B\u8C03\u5EA6\u6A21\u578B</span><span class="suffix"></span></h4><p>cluster\u662F\u7531master\u76D1\u542C\u8BF7\u6C42\uFF0C\u518D\u901A\u8FC7<code class="">round-robin</code>\u7B97\u6CD5\u5206\u53D1\u7ED9\u5404\u4E2Aworker\uFF0C\u907F\u514D\u4E86\u60CA\u7FA4\u73B0\u8C61\u7684\u53D1\u751F\u3002</p><blockquote><p>round-robin <strong>\u8F6E\u8BE2\u8C03\u5EA6\u7B97\u6CD5</strong>\u7684\u539F\u7406\u662F\u6BCF\u4E00\u6B21\u628A\u6765\u81EA\u7528\u6237\u7684\u8BF7\u6C42\u8F6E\u6D41\u5206\u914D\u7ED9\u5185\u90E8\u4E2D\u7684\u670D\u52A1\u5668</p></blockquote><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200313154508.png" alt="image-20190531115049093"></figure><p>cluster\u8C03\u5EA6\u6A21\u578B\u7B80\u6613demo</p><p><code class="">master.js</code></p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> net <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;net&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fork <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fork

<span class="token keyword">const</span> workers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
  workers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&#39;./worker&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> handle <span class="token operator">=</span> net<span class="token punctuation">.</span><span class="token function">_createServerHandle</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
handle<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
handle<span class="token punctuation">.</span><span class="token function-variable function">onconnection</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> handle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> worker <span class="token operator">=</span> workers<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  worker<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> handle<span class="token punctuation">)</span>
  workers<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>worker<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> net <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;net&#39;</span><span class="token punctuation">)</span>
process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> handle</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">start</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> buf <span class="token operator">=</span> <span class="token string">&#39;hello Node.js&#39;</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token punctuation">[</span><span class="token string">&#39;HTTP/1.1 200 OK&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">content-length:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buf<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\r\\n&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\r\\n\\r\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>buf<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token parameter">handle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;got a connection on worker, pid = %d&#39;</span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>pid<span class="token punctuation">)</span>
  <span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">net<span class="token punctuation">.</span>Socket</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    handle<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  socket<span class="token punctuation">.</span>readable <span class="token operator">=</span> socket<span class="token punctuation">.</span>writable <span class="token operator">=</span> <span class="token boolean">true</span>
  socket<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h5 id="cluster%E4%B8%AD%E7%9A%84%E4%BC%98%E9%9B%85%E9%80%80%E5%87%BA" tabindex="-1"><span class="prefix"></span><span class="content">cluster\u4E2D\u7684\u4F18\u96C5\u9000\u51FA</span><span class="suffix"></span></h5><ol><li>\u5173\u95ED\u5F02\u5E38 Worker \u8FDB\u7A0B\u6240\u6709\u7684 TCP Server\uFF08\u5C06\u5DF2\u6709\u7684\u8FDE\u63A5\u5FEB\u901F\u65AD\u5F00\uFF0C\u4E14\u4E0D\u518D\u63A5\u6536\u65B0\u7684\u8FDE\u63A5\uFF09\uFF0C\u65AD\u5F00\u548C Master \u7684 IPC \u901A\u9053\uFF0C\u4E0D\u518D\u63A5\u53D7\u65B0\u7684\u7528\u6237\u8BF7\u6C42\u3002</li><li>Master \u7ACB\u523B fork \u4E00\u4E2A\u65B0\u7684 Worker \u8FDB\u7A0B\uFF0C\u4FDD\u8BC1\u5728\u7EBF\u7684\u300E\u5DE5\u4EBA\u300F\u603B\u6570\u4E0D\u53D8\u3002</li><li>\u5F02\u5E38 Worker \u7B49\u5F85\u4E00\u6BB5\u65F6\u95F4\uFF0C\u5904\u7406\u5B8C\u5DF2\u7ECF\u63A5\u53D7\u7684\u8BF7\u6C42\u540E\u9000\u51FA\u3002</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>cluster<span class="token punctuation">.</span>isMaster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cluster<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u51FA\u9519\u4E4B\u540E</span>
  process<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// exit()</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4" tabindex="-1"><span class="prefix"></span><span class="content">\u8FDB\u7A0B\u5B88\u62A4</span><span class="suffix"></span></h5><p>master \u8FDB\u7A0B\u9664\u4E86\u8D1F\u8D23\u63A5\u6536\u65B0\u7684\u8FDE\u63A5\uFF0C\u5206\u53D1\u7ED9\u5404 worker \u8FDB\u7A0B\u5904\u7406\u4E4B\u5916\uFF0C\u8FD8\u5F97\u50CF\u5929\u4F7F\u4E00\u6837\u9ED8\u9ED8\u5730\u5B88\u62A4\u7740\u8FD9\u4E9B worker \u8FDB\u7A0B\uFF0C\u4FDD\u969C\u6574\u4E2A\u5E94\u7528\u7684\u7A33\u5B9A\u6027\u3002\u4E00\u65E6\u67D0\u4E2A worker \u8FDB\u7A0B\u5F02\u5E38\u9000\u51FA\u5C31 fork \u4E00\u4E2A\u65B0\u7684\u5B50\u8FDB\u7A0B\u9876\u66FF\u4E0A\u53BB\u3002</p><p>\u8FD9\u4E00\u5207 cluster \u6A21\u5757\u90FD\u5DF2\u7ECF\u597D\u5904\u7406\u4E86\uFF0C\u5F53\u67D0\u4E2A worker \u8FDB\u7A0B\u53D1\u751F\u5F02\u5E38\u9000\u51FA\u6216\u8005\u4E0E master \u8FDB\u7A0B\u5931\u53BB\u8054\u7CFB\uFF08disconnected\uFF09\u65F6\uFF0Cmaster \u8FDB\u7A0B\u90FD\u4F1A\u6536\u5230\u76F8\u5E94\u7684\u4E8B\u4EF6\u901A\u77E5\u3002</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">cluster<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  clsuter<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

cluster<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;disconnect&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  clsuter<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="ipc%E9%80%9A%E4%BF%A1" tabindex="-1"><span class="prefix"></span><span class="content">IPC\u901A\u4FE1</span><span class="suffix"></span></h5><p>IPC\u901A\u4FE1\u5C31\u662F\u8FDB\u7A0B\u95F4\u7684\u901A\u4FE1\u3002</p><p>\u867D\u7136\u6BCF\u4E2A Worker \u8FDB\u7A0B\u662F\u76F8\u5BF9\u72EC\u7ACB\u7684\uFF0C\u4F46\u662F\u5B83\u4EEC\u4E4B\u95F4\u59CB\u7EC8\u8FD8\u662F\u9700\u8981\u901A\u8BAF\u7684\uFF0C\u53EB\u8FDB\u7A0B\u95F4\u901A\u8BAF\uFF08IPC\uFF09\u3002\u4E0B\u9762\u662F Node.js \u5B98\u65B9\u63D0\u4F9B\u7684\u4E00\u6BB5\u793A\u4F8B\u4EE3\u7801</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token string">&#39;use strict&#39;</span>
<span class="token keyword">const</span> cluster <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>cluster<span class="token punctuation">.</span>isMaster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> worker <span class="token operator">=</span> cluster<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  worker<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;hi there&#39;</span><span class="token punctuation">)</span>
  worker<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">msg: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>msg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> from worker#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>worker<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cluster<span class="token punctuation">.</span>isWorker<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u7EC6\u5FC3\u7684\u4F60\u53EF\u80FD\u5DF2\u7ECF\u53D1\u73B0 cluster \u7684 IPC \u901A\u9053\u53EA\u5B58\u5728\u4E8E Master \u548C Worker \u4E4B\u95F4\uFF0CWorker \u4E0E Worker \u8FDB\u7A0B\u4E92\u76F8\u95F4\u662F\u6CA1\u6709\u7684\u3002\u90A3\u4E48 Worker \u4E4B\u95F4\u60F3\u901A\u8BAF\u8BE5\u600E\u4E48\u529E\u5462\uFF1F\u901A\u8FC7 Master \u6765\u8F6C\u53D1\u3002</p><p>\u6838\u5FC3\uFF1A worker\u76F4\u63A5\u7684\u901A\u4FE1\uFF0C\u9760master\u8F6C\u53D1\uFF0C\u5229\u7528workder\u7684pid\u3002</p>`,195),c=[o],d={title:"nodejs\u4E8B\u4EF6\u5FAA\u73AF\u4E0E\u591A\u8FDB\u7A0B",tag:["events","cluster","macrotask","microtask"],author:"Artiely",date:"2019-6-4",cover:"/2022-05-14-22-01-43.png",base64:"32332b",tinyCover:"/cover/2022-05-14-22-01-43.png",coverWidth:675,coverHeight:1200,coverPrimary:"2b251f",coverSecondary:"d4dae0",meta:[{property:"og:title",content:"nodejs\u4E8B\u4EF6\u5FAA\u73AF\u4E0E\u591A\u8FDB\u7A0B"}]},l={__name:"2019-6-4-nodejs-events",setup(u,{expose:s}){return a({title:"nodejs\u4E8B\u4EF6\u5FAA\u73AF\u4E0E\u591A\u8FDB\u7A0B",meta:[{property:"og:title",content:"nodejs\u4E8B\u4EF6\u5FAA\u73AF\u4E0E\u591A\u8FDB\u7A0B"}]}),s({frontmatter:{title:"nodejs\u4E8B\u4EF6\u5FAA\u73AF\u4E0E\u591A\u8FDB\u7A0B",tag:["events","cluster","macrotask","microtask"],author:"Artiely",date:"2019-6-4",cover:"/2022-05-14-22-01-43.png",base64:"32332b",tinyCover:"/cover/2022-05-14-22-01-43.png",coverWidth:675,coverHeight:1200,coverPrimary:"2b251f",coverSecondary:"d4dae0",meta:[{property:"og:title",content:"nodejs\u4E8B\u4EF6\u5FAA\u73AF\u4E0E\u591A\u8FDB\u7A0B"}]}}),(r,k)=>(p(),t("div",null,c))}};typeof n=="function"&&n(l);export{l as default,d as frontmatter};
