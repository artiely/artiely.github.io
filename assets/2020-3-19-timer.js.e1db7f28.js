import{i as a,o as p,c as t,j as n,k as e}from"./app.4eeffe1f.js";const o=e(`<p>Timer.js \u662F\u4E00\u4E2A\u7B80\u5355\u800C\u8F7B\u91CF\u7684\u5B9A\u65F6\u5668\u7BA1\u7406\u5E93\uFF0C\u5E76\u4E14\u65E0\u4F9D\u8D56\u3002</p><h2 id="%E5%AE%89%E8%A3%85" tabindex="-1"><span class="prefix"></span><span class="content">\u5B89\u88C5</span><span class="suffix"></span></h2><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> timer.js
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u4F7F\u7528\u793A\u4F8B</span><span class="suffix"></span></h2><p>\u5236\u4F5C\u62AB\u8428\u7684\u5012\u8BA1\u65F6</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">import</span> Timer <span class="token keyword">from</span> <span class="token string">&#39;timer.js&#39;</span>
<span class="token keyword">const</span> pizzaTimer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> pizzaCookingTime <span class="token operator">=</span> <span class="token number">15</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token comment">// 15 minutes</span>

pizzaTimer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>pizzaCookingTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Pizza is ready, bon appetit!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6240\u6709\u7684\u65B9\u6CD5\u90FD\u652F\u6301\u94FE\u5F0F\u64CD\u4F5C</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">myTimer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;pause&#39;</span><span class="token punctuation">,</span> doSmth<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// and so on</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u6240\u6709\u7684\u53C2\u6570</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> myTimer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">tick</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token function">ontick</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ms<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> milliseconds left</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onstart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer started&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onstop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer stop&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onpause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer set on pause&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;timer ended normally&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6240\u6709\u7684\u65B9\u6CD5</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">myTimer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// on\u53EF\u4EE5\u76D1\u542C\u7684\u4E8B\u4EF6 tick, ontick, start, onstart, end, onend, stop, onstop, pause, onpause</span>
myTimer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;woo-hooo! my timer ended normally&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

myTimer<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;pause&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u6062\u590D\u9ED8\u8BA4</span>
myTimer<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;all&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u83B7\u5F97\u5F53\u524D\u7684\u72B6\u6001 \u72B6\u6001\u503C &#39;initialized&#39;, &#39;started&#39;, &#39;paused&#39;, &#39;stopped&#39;</span>
myTimer<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;initialized&#39;</span>
myTimer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;started&#39;</span>
myTimer<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;paused&#39;</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>getDuration() \u83B7\u53D6\u5269\u4F59\u65F6\u95F4</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">myTimer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
<span class="token comment">// some operation that lasts for 2 seconds</span>
myTimer<span class="token punctuation">.</span><span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 18000</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>measureStart() measureStop()\u83B7\u53D6\u4E4B\u95F4\u7684\u6267\u884C\u65F6\u95F4</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">myTimer<span class="token punctuation">.</span><span class="token function">measureStart</span><span class="token punctuation">(</span><span class="token string">&#39;label1&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">10000000</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
  a<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

myTimer<span class="token punctuation">.</span><span class="token function">measureStop</span><span class="token punctuation">(</span><span class="token string">&#39;label1&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 276 i.e.</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,16),c=[o],d={title:"timer.js \u4ECB\u7ECD",date:"2020-3-19",cover:"/2022-05-13-12-08-39.png",tag:["timer.js"],author:"Artiely",base64:"00040e",tinyCover:"/cover/2022-05-13-12-08-39.png",coverWidth:564,coverHeight:564,coverPrimary:"657674",coverSecondary:"9a898b",meta:[{property:"og:title",content:"timer.js \u4ECB\u7ECD"}]},l={__name:"2020-3-19-timer.js",setup(i,{expose:s}){return a({title:"timer.js \u4ECB\u7ECD",meta:[{property:"og:title",content:"timer.js \u4ECB\u7ECD"}]}),s({frontmatter:{title:"timer.js \u4ECB\u7ECD",date:"2020-3-19",cover:"/2022-05-13-12-08-39.png",tag:["timer.js"],author:"Artiely",base64:"00040e",tinyCover:"/cover/2022-05-13-12-08-39.png",coverWidth:564,coverHeight:564,coverPrimary:"657674",coverSecondary:"9a898b",meta:[{property:"og:title",content:"timer.js \u4ECB\u7ECD"}]}}),(r,k)=>(p(),t("div",null,c))}};typeof n=="function"&&n(l);export{l as default,d as frontmatter};
