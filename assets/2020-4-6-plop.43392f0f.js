import{i as a,o as p,c as t,j as n,k as e}from"./app.dce1b217.js";var o="/assets/20200406174046.3e5a73a9.png",c="/assets/20200406174131.eaa56e7d.png";const l=e(`<h2 id="%E5%AE%98%E7%BD%91" tabindex="-1"><span class="prefix"></span><span class="content">\u5B98\u7F51</span><span class="suffix"></span></h2><p><a href="https://plopjs.com/documentation/#installation" target="_blank" rel="noopener">https://plopjs.com/documentation/#installation</a></p><h2 id="%E5%AE%89%E8%A3%85" tabindex="-1"><span class="prefix"></span><span class="content">\u5B89\u88C5</span><span class="suffix"></span></h2><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell">// \u5168\u5C40\u5B89\u88C5
<span class="token function">npm</span> i -g plop

// \u672C\u5730\u5B89\u88C5
<span class="token function">npm</span> i --save-dev plop
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="%E9%85%8D%E7%BD%AE" tabindex="-1"><span class="prefix"></span><span class="content">\u914D\u7F6E</span><span class="suffix"></span></h2><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token comment">// \u66F4\u76EE\u5F55\u521B\u5EFA\u6587\u4EF6 plopfile.js  plop\u5C06\u5DF2\u8BE5\u6587\u4EF6\u4F5C\u4E3A\u6267\u884C\u5165\u53E3</span>

<span class="token comment">// \u5BFC\u51FA\u6267\u884C\u51FD\u6570</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  plop<span class="token punctuation">.</span><span class="token function">getGenerator</span><span class="token punctuation">(</span><span class="token string">&#39;\u6A21\u677F\u540D\u79F0&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;\u64CD\u4F5C\u63CF\u8FF0&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">prompts</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u4EA4\u4E92\u63D0\u793A</span>
    <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u6267\u884C\u64CD\u4F5C</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8" tabindex="-1"><span class="prefix"></span><span class="content">\u57FA\u7840\u4F7F\u7528</span><span class="suffix"></span></h2><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token comment">// plopfile.js</span>

module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

   plop<span class="token punctuation">.</span><span class="token function">getGenerator</span><span class="token punctuation">(</span><span class="token string">&quot;vue\u57FA\u7840\u6A21\u677F&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
       <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;\u521B\u5EFAvue\u6587\u4EF6&#39;</span><span class="token punctuation">,</span>
       <span class="token literal-property property">prompts</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
               <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
               <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">,</span>
               <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u6587\u4EF6\u521B\u5EFA\u76EE\u5F55&#39;</span>
           <span class="token punctuation">}</span>
           <span class="token punctuation">{</span>
               <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// \u4EA4\u4E92\u7C7B\u578B</span>
               <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// \u53C2\u6570\u540D\u79F0</span>
               <span class="token literal-property property">message</span><span class="token operator">:</span><span class="token string">&#39;\u8BF7\u8F93\u5165\u6587\u4EF6\u540D\u79F0&#39;</span> <span class="token comment">// \u4EA4\u4E92\u63D0\u793A</span>
           <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">]</span><span class="token punctuation">,</span>
       <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span>
           <span class="token punctuation">{</span>
               <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u52A8\u4F5C\u7C7B\u578B</span>
               <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;{{ path }}/{{ name }}.vue&#39;</span><span class="token punctuation">,</span> <span class="token comment">// &#39;{{  }}&#39; \u53CC\u5927\u62EC\u53F7\u5185\u8BBE\u7F6E\u52A8\u6001\u53C2\u6570</span>
               <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/views/vue.hbs&#39;</span> <span class="token comment">// \u6A21\u677F\u6587\u4EF6\u5730\u5740\uFF0C \u4F7F\u7528hbs\u6587\u4EF6</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">]</span>

   <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><div class="language-html ext-html code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-html line-numbers-mode"><code class="language-html">// plop-templates/views/vue.hbs
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ name }}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;{{ name }}&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="%E6%89%A7%E8%A1%8C" tabindex="-1"><span class="prefix"></span><span class="content">\u6267\u884C</span><span class="suffix"></span></h2><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell">plop
<span class="token comment"># plop --plopfile generator/index.js</span>
<span class="token comment"># --plopfile \u53EF\u4EE5\u6307\u5B9A\u81EA\u5B9A\u4E49\u7684plopfile\u6587\u4EF6</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h1 id="%E8%BF%9B%E9%98%B6" tabindex="-1"><span class="prefix"></span><span class="content">\u8FDB\u9636</span><span class="suffix"></span></h1><h2 id="%E6%B3%A8%E5%86%8Cinquirer%E6%8F%92%E4%BB%B6" tabindex="-1"><span class="prefix"></span><span class="content">\u6CE8\u518Cinquirer\u63D2\u4EF6</span><span class="suffix"></span></h2><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  plop<span class="token punctuation">.</span><span class="token function">setWelcomeMessage</span><span class="token punctuation">(</span><span class="token string">&#39;\u6B22\u8FCE\u4F7F\u7528\u6A21\u677F\u751F\u6210\u5668&#39;</span><span class="token punctuation">)</span>
  plop<span class="token punctuation">.</span><span class="token function">setPrompt</span><span class="token punctuation">(</span><span class="token string">&#39;autocomplete&#39;</span><span class="token punctuation">,</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;inquirer-autocomplete-prompt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  plop<span class="token punctuation">.</span><span class="token function">setPrompt</span><span class="token punctuation">(</span><span class="token string">&#39;fuzzypath&#39;</span><span class="token punctuation">,</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;inquirer-fuzzy-path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&#39;views     &#39;</span><span class="token punctuation">,</span> viewsGenerator<span class="token punctuation">)</span>
  plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&#39;router &#39;</span><span class="token punctuation">,</span> routerGenerator<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>2\u4FEE\u6539\u5168\u5C40\u6B22\u8FCE\u63D0\u793A\u8BED</p><p>3\u5F15\u5165\u81EA\u52A8\u5B8C\u6210\u63D2\u4EF6</p><p>4\u5F15\u5165\u8DEF\u5F84\u67E5\u8BE2\u63D2\u4EF6</p><h2 id="%E5%AE%9E%E8%B7%B5" tabindex="-1"><span class="prefix"></span><span class="content">\u5B9E\u8DF5</span><span class="suffix"></span></h2><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> util <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;util&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fuzzy <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fuzzy&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> _ <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lodash&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;\u751F\u6210\u89C6\u56FE\u7EC4\u4EF6&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">prompts</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;autocomplete&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;dir&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u8BF7\u9009\u62E9\u6216\u521B\u5EFA\u6587\u4EF6\u540D&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">source</span><span class="token operator">:</span> searchFolderPath<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;nihao&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u9875\u9762\u540D\u79F0&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token function-variable function">actions</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;{{name}}&#39;</span>
    <span class="token keyword">const</span> dir <span class="token operator">=</span> <span class="token string">&#39;{{dir}}&#39;</span>
    <span class="token keyword">const</span> dirArr <span class="token operator">=</span> dir
      <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> v
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../src/views/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dirArr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/{{properCase  name}}.vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&#39;plop-templates/views/index.hbs&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          name<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
    <span class="token keyword">return</span> actions
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> viewsFolderPath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment">// \u8BFB\u53D6\u5F53\u524D\u76EE\u5F55\u4E0B\u7684\u7B2C\u4E00\u5C42\u6587\u4EF6\u5939</span>

<span class="token keyword">function</span> <span class="token function">searchFolderPath</span><span class="token punctuation">(</span><span class="token parameter">answers<span class="token punctuation">,</span> input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  input <span class="token operator">=</span> input <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> fuzzyResult <span class="token operator">=</span> fuzzy<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> viewsFolderPath<span class="token punctuation">)</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>
        fuzzyResult
          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> el<span class="token punctuation">.</span>original
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> readdir <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">promisify</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span>readdir<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">listNodes</span><span class="token punctuation">(</span><span class="token parameter">nodePath<span class="token punctuation">,</span> level</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> nodes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readdir</span><span class="token punctuation">(</span>nodePath<span class="token punctuation">)</span>
    <span class="token keyword">const</span> currentNode <span class="token operator">=</span> <span class="token punctuation">[</span>nodePath<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nodes<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">undefined</span> <span class="token operator">===</span> <span class="token number">5</span> <span class="token operator">||</span> level <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nodesWithPath <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">nodeName</span> <span class="token operator">=&gt;</span>
        <span class="token function">listNodes</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>nodePath<span class="token punctuation">,</span> nodeName<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">?</span> level <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
      <span class="token keyword">const</span> subNodes <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>nodesWithPath<span class="token punctuation">)</span>
      <span class="token keyword">return</span> subNodes<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">,</span> currentNode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> currentNode
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">readFolderPath</span><span class="token punctuation">(</span><span class="token parameter">dirPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">listNodes</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> v
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> path
            <span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\\\</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\\\</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">m</span> <span class="token operator">=&gt;</span> m<span class="token punctuation">)</span>
      foods <span class="token operator">=</span> res
      <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">readFolderPath</span><span class="token punctuation">(</span><span class="token string">&#39;./src/views/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  viewsFolderPath <span class="token operator">=</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u6211\u4EEC\u5B9E\u73B0\u4E86\u4E00\u4E2A\u8F93\u5165\u65F6\u81EA\u52A8\u67E5\u8BE2\u4E0E\u8F93\u5165\u76F8\u5339\u914D\u7684\u8DEF\u5F84\u6210\u5217\u518D\u4E0B\u65B9\u53EF\u4EE5\u76F4\u63A5\u7BAD\u5934\u9009\u62E9\uFF0C\u6CA1\u6709\u8054\u60F3\u7684\u7ED3\u679C\u8BC1\u660E\u6587\u4EF6\u5939\u4E0D\u5B58\u5728\u56DE\u8F66\u5373\u521B\u5EFA</p><figure><img src="`+o+'" alt=""></figure><figure><img src="'+c+'" alt=""></figure><h2 id="%E7%9B%B8%E5%85%B3" tabindex="-1"><span class="prefix"></span><span class="content">\u76F8\u5173</span><span class="suffix"></span></h2><p><a href="https://github.com/SBoudrias/Inquirer.js/" target="_blank" rel="noopener">inquirer</a></p><p><a href="https://handlebarsjs.com/" target="_blank" rel="noopener">handlebars</a></p>',25),r=[l],g={title:"plop \u6A21\u677F\u751F\u6210\u5DE5\u5177",tag:["plop"],cover:"/2022-05-13-12-15-06.png",date:"2020-4-6",base64:"1d2323",tinyCover:"/cover/2022-05-13-12-15-06.png",coverWidth:564,coverHeight:1002,coverPrimary:"0d1011",coverSecondary:"f2efee",meta:[{property:"og:title",content:"plop \u6A21\u677F\u751F\u6210\u5DE5\u5177"}]},u={__name:"2020-4-6-plop",setup(i,{expose:s}){return a({title:"plop \u6A21\u677F\u751F\u6210\u5DE5\u5177",meta:[{property:"og:title",content:"plop \u6A21\u677F\u751F\u6210\u5DE5\u5177"}]}),s({frontmatter:{title:"plop \u6A21\u677F\u751F\u6210\u5DE5\u5177",tag:["plop"],cover:"/2022-05-13-12-15-06.png",date:"2020-4-6",base64:"1d2323",tinyCover:"/cover/2022-05-13-12-15-06.png",coverWidth:564,coverHeight:1002,coverPrimary:"0d1011",coverSecondary:"f2efee",meta:[{property:"og:title",content:"plop \u6A21\u677F\u751F\u6210\u5DE5\u5177"}]}}),(b,m)=>(p(),t("div",null,r))}};typeof n=="function"&&n(u);export{u as default,g as frontmatter};
