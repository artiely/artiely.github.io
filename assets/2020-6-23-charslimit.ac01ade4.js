import{i as a,o as p,c as t,j as n,k as e}from"./app.f3af3448.js";const o=e(`<p>show code</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token comment">// \u8BA1\u7B97\u5F53\u524D\u8F93\u5165\u7684\u5B57\u8282</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token comment">// \u5355\u5B57\u8282\u52A01</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">&gt;=</span> <span class="token number">0x0001</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&lt;=</span> <span class="token number">0x007E</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;=</span> <span class="token number">0xFF9F</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&gt;=</span> <span class="token number">0xFF60</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      len<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
      len <span class="token operator">+=</span> <span class="token number">2</span>

  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> len
<span class="token punctuation">}</span>
<span class="token comment">// \u8BA1\u7B97\u8FD8\u53EF\u8F93\u5165\u7684\u5B57\u8282</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">maxlen</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token number">60</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token comment">// \u5355\u5B57\u8282\u52A01</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">&gt;=</span> <span class="token number">0x0001</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&lt;=</span> <span class="token number">0x007E</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;=</span> <span class="token number">0xFF9F</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&gt;=</span> <span class="token number">0xFF60</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      len <span class="token operator">-=</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> len
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">event</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> evt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&#39;Event&#39;</span><span class="token punctuation">)</span>
  evt<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;dispatch&#39;</span> <span class="token operator">&amp;&amp;</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> textLength<span class="token punctuation">,</span> leftLength <span class="token punctuation">}</span> <span class="token operator">=</span> arg
    evt<span class="token punctuation">.</span>textLength <span class="token operator">=</span> textLength
    evt<span class="token punctuation">.</span>leftLength <span class="token operator">=</span> leftLength
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> evt
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9input\u5143\u7D20\u6709\u6548</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLocaleUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;INPUT&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> els <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>els<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">v-charslimit directive requires 1 input, found </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>els<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        el <span class="token operator">=</span> els<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u76D1\u542C\u8F93\u5165\u4E8B\u4EF6</span>
    el<span class="token punctuation">.</span><span class="token function-variable function">oninput</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">.</span>isTrusted<span class="token punctuation">)</span> <span class="token keyword">return</span>
      <span class="token comment">// \u5F53\u524D\u7684\u503C</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> el<span class="token punctuation">.</span>value
      <span class="token comment">// \u5F53\u524D\u8F93\u5165\u7684\u5B57\u7B26\u957F\u5EA6</span>
      <span class="token keyword">const</span> textLength <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>

      <span class="token comment">// \u83B7\u53D6\u914D\u7F6E</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> maxLength <span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">}</span> <span class="token operator">=</span> binding<span class="token punctuation">.</span>value
      <span class="token comment">// \u5269\u4F59\u5B57\u7B26\u957F\u5EA6</span>
      <span class="token keyword">const</span> leftLength <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>maxLength <span class="token operator">-</span> textLength<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>textLength <span class="token operator">&gt;</span> maxLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u56E0\u4E3A\u4E0D\u77E5\u9053\u7528\u6237\u8F93\u5165\u7684\u6BCF\u4E2A\u5B57\u662F\u591A\u5C11\u5B57\u7B26</span>
        <span class="token comment">// \u6BCF\u6B21\u4ECE\u672B\u5C3E\u5220\u96641\u4E2A\u5B57\u7B26</span>
        el<span class="token punctuation">.</span>value <span class="token operator">=</span> el<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> el<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
        el<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token function">event</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      el<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>
        <span class="token comment">// textLength \u5F53\u524D\u5B57\u7B26\u957F\u5EA6</span>
        <span class="token comment">// leftLength \u8FD8\u5269\u5B57\u7B26\u957F\u5EA6</span>
        <span class="token function">event</span><span class="token punctuation">(</span><span class="token string">&#39;dispatch&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">textLength</span><span class="token operator">:</span> <span class="token function">strlen</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> leftLength <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><p>use</p><div class="language-html ext-html code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-html line-numbers-mode"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-input</span>
    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>val<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-charslimit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{
      maxLength: 30,
    }<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@dispatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handle<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
  \u5DF2\u8F93\u5165{{ textLength }} \u5269\u4F59{{ leftLength }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">textLength</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">leftLength</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">handle</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>textLength <span class="token operator">=</span> e<span class="token punctuation">.</span>textLength
    <span class="token keyword">this</span><span class="token punctuation">.</span>leftLength <span class="token operator">=</span> e<span class="token punctuation">.</span>leftLength
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><div class="warning custom-container"><p class="custom-container-title"><svg class="warning container-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line></svg>WARNING</p><p>\u9664\u4E86 <code class="">el</code> \u4E4B\u5916\uFF0C\u5176\u5B83\u53C2\u6570\u90FD\u5E94\u8BE5\u662F\u53EA\u8BFB\u7684\uFF0C\u5207\u52FF\u8FDB\u884C\u4FEE\u6539\u3002\u5982\u679C\u9700\u8981\u5728\u94A9\u5B50\u4E4B\u95F4\u5171\u4EAB\u6570\u636E\uFF0C\u5EFA\u8BAE\u901A\u8FC7\u5143\u7D20\u7684 <code class="">dataset</code> \u6765\u8FDB\u884C\u3002</p></div><p>\u53C2\u8003\uFF1A<a href="https://cn.vuejs.org/v2/guide/custom-directive.html" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/custom-directive.html</a></p>`,6),c=[o],m={title:"\u6307\u4EE4\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6",tag:["vue"],cover:"/2022-05-13-13-01-53.png",base64:"68a863",date:"2020-6-23",author:"artiely",tinyCover:"/cover/2022-05-13-13-01-53.png",coverWidth:564,coverHeight:810,coverPrimary:"e5e2e0",coverSecondary:"1a1d1f",meta:[{property:"og:title",content:"\u6307\u4EE4\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6"}]},l={__name:"2020-6-23-charslimit",setup(u,{expose:s}){return a({title:"\u6307\u4EE4\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6",meta:[{property:"og:title",content:"\u6307\u4EE4\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6"}]}),s({frontmatter:{title:"\u6307\u4EE4\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6",tag:["vue"],cover:"/2022-05-13-13-01-53.png",base64:"68a863",date:"2020-6-23",author:"artiely",tinyCover:"/cover/2022-05-13-13-01-53.png",coverWidth:564,coverHeight:810,coverPrimary:"e5e2e0",coverSecondary:"1a1d1f",meta:[{property:"og:title",content:"\u6307\u4EE4\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6"}]}}),(i,k)=>(p(),t("div",null,c))}};typeof n=="function"&&n(l);export{l as default,m as frontmatter};
