import{i as a,o as p,c as t,j as n,k as e}from"./app.c9769bc0.js";const o=e(`<p>\u82F1 [\u02CCp\u028Cp\u026A\u02C8t\u026A\u0259r]<br> \u7F8E [\u02CCp\u028Cp\u026A\u02C8t\u026Ar]</p><p>n. \u64CD\u7EB5\u6728\u5076\u7684\u4EBA\uFF1B\u64CD\u7EB5\u5080\u5121 vt. \u64CD\u7EB5</p><ul><li>\u6D4F\u89C8\u5668\u81EA\u52A8\u5316\u5E93</li><li>Puppeteer = Node.js + Chrome</li><li>\u8BC4\u4F30 Javascript</li></ul><h2 id="%E5%AE%98%E7%BD%91" tabindex="-1"><span class="prefix"></span><span class="content">\u5B98\u7F51</span><span class="suffix"></span></h2><p><a href="https://github.com/puppeteer/puppeteer" target="_blank" rel="noopener">Puppeteer</a></p><h2 id="%E5%AE%89%E8%A3%85" tabindex="-1"><span class="prefix"></span><span class="content">\u5B89\u88C5</span><span class="suffix"></span></h2><p>\u53EA\u9700\u5B89\u88C5 NPM \u5305\u5373\u53EF\u5F00\u59CB</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">npm i puppeteer
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u7136\u540E</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> puppetter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ....</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="%E4%BB%8E%E4%B8%80%E4%BA%9B%E5%9C%BA%E6%99%AF%E4%B8%AD%E4%BA%86%E8%A7%A3-puppeteer-%E7%9A%84%E5%BA%94%E7%94%A8" tabindex="-1"><span class="prefix"></span><span class="content">\u4ECE\u4E00\u4E9B\u573A\u666F\u4E2D\u4E86\u89E3 Puppeteer \u7684\u5E94\u7528</span><span class="suffix"></span></h2><ol><li>\u67D0\u8D2D\u7269\u7F51\u7AD9\u67D0\u5546\u54C1\u7684\u4EF7\u683C\u53D8\u5316\u8D8B\u52BF\u6216\u67D0\u65B0\u95FB\u7F51\u7AD9\u7684\u65B0\u95FB</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><br><br><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> puppetter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ....</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u83B7\u53D6\u4EF7\u683C</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> price <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$sevel</span><span class="token punctuation">(</span><span class="token string">&#39;.price&#39;</span><span class="token punctuation">,</span> <span class="token parameter">div</span> <span class="token operator">=&gt;</span> div<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2"><li>\u5904\u7406\u5F02\u6B65\u548C\u5BF9\u7F51\u7AD9\u8FDB\u884C\u6D4B\u8BD5 \u53EF\u4EE5\u7ED3\u5408\u4EFB\u4F55\u6D4B\u8BD5\u5E93</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should pay&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u5F02\u6B65\u5904\u7406 waithForX ...</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelect</span><span class="token punctuation">(</span><span class="token string">&#39;.button&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">waitForResponse</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;/pay&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;.button&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> response
  <span class="token function">assert</span><span class="token punctuation">(</span><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">$evel</span><span class="token punctuation">(</span><span class="token string">&#39;.success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="3"><li>\u6D4B\u8BD5\u5728\u79FB\u52A8\u8BBE\u5907\u7684\u8868\u73B0</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><br><div class="highlighted">\xA0</div><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should work on mobile&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">emulate</span><span class="token punctuation">(</span>puppeteer<span class="token punctuation">.</span>devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 8&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="4"><li>\u7F51\u7AD9\u7684\u79BB\u7EBF\u8868\u73B0</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><br><br><br><div class="highlighted">\xA0</div><br><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should notify user when goes offline&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">emulate</span><span class="token punctuation">(</span>puppeteer<span class="token punctuation">.</span>devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 8&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setOfflineMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> alert <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelece</span><span class="token punctuation">(</span><span class="token string">&#39;.offline-alert&#39;</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>alert<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="5"><li>\u68C0\u6D4B\u6CE8\u518C\u7684 servce worker</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should register service worker&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">emulate</span><span class="token punctuation">(</span>puppeteer<span class="token punctuation">.</span>devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 8&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&quot;https://...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> swTarget <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForTarget</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">&#39;ervice_worker&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> sw <span class="token operator">=</span> <span class="token keyword">await</span> swTarget<span class="token punctuation">.</span><span class="token function">worker</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> isCatch  <span class="token operator">=</span> <span class="token keyword">await</span> sw<span class="token punctuation">.</span><span class="token function">evalute</span><span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">await</span> caches<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token string">&#39;https://artiely.gitee.io/x.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>isCatch<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8FDB\u9636</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token string">&#39;navigator.serviceWorker.ready&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> requests <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span><span class="token parameter">req</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> requests<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">waitUntil</span><span class="token operator">:</span><span class="token string">&#39;networkkid0&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>url<span class="token punctuation">,</span>req<span class="token punctuation">]</span> <span class="token keyword">of</span> requests<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> swResp <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromServiceWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>swResp<span class="token operator">?</span><span class="token string">&#39;\u221A&#39;</span>\uFF1A<span class="token string">&#39;\xD7&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="6"><li>\u6A21\u62DF\u4F4D\u7F6E</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should $ in US&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">emulate</span><span class="token punctuation">(</span>puppeteer<span class="token punctuation">.</span>devices<span class="token punctuation">[</span><span class="token string">&#39;iPhone 8&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setGeolocation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">latitude</span><span class="token operator">:</span> <span class="token number">140.00</span><span class="token punctuation">,</span>
    <span class="token literal-property property">longitude</span><span class="token operator">:</span> <span class="token number">30.00</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://...&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="7"><li>\u62E6\u622A\u5E76\u4FEE\u6539\u3002\u3002\u3002</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">await</span> page <span class="token function">serRequestInterception</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span><span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4FEE\u6539\u56FE\u7247</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">resourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">===</span> <span class="token string">&#39;image&#39;</span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token function">randomCatImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span>
    request<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \u53D6\u6D88\u8BF7\u6C42</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;https://x/pay&#39;</span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span>
    request<span class="token punctuation">.</span><span class="token function">contiune</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="8"><li>\u6A21\u62DF\u8F93\u5165\u548C\u4E8B\u4EF6</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://pptr.dev/&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> input <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelect</span><span class="token punctuation">(</span><span class="token string">&#39;[type=search]&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> input<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;javascript&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span>keyboard<span class="token punctuation">.</span><span class="token function">press</span><span class="token punctuation">(</span><span class="token string">&#39;Enter&#39;</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="9"><li>\u9875\u9762\u6027\u80FD\u6307\u6807</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> metrics <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">metrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>metrics<span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">await</span> page<span class="token punctuation">.</span>tracing<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;./trace.json&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://pptr.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelect</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
<span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token punctuation">.</span>tracing<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="10"><li>\u670D\u52A1\u7AEF\u6E32\u67D3</li></ol><div class="language-html ext-html code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-html line-numbers-mode"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">posts<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> html <span class="token operator">=</span> posts<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">html<span class="token punctuation">,</span> post</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>html<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
        &lt;li&gt;
        &lt;h2&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>post<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/h2&gt;
        &lt;p&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>post<span class="token punctuation">.</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;
        &lt;/li&gt;
        </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;ul&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>html<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;ul&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/post&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">rednder</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>ssr.js</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">import</span> puppeteer <span class="token keyword">from</span> <span class="token string">&#39;puppeteer&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">ssr</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">lanuch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">&#39;networkidle0&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> html
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>server.js</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><br><br><br><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><div class="highlighted">\xA0</div><br><br><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ssr <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./ssr.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> origin <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>protocol<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ssr</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>origin<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.html</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;server start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u4F18\u5316\u66F4\u5FEB\u7684\u76F4\u8FBE ssr.js</li></ul><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><div class="highlight-lines"><br><br><br><br><br><div class="highlighted">\xA0</div><br><div class="highlighted">\xA0</div><br><br><br><br><br></div><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">import</span> puppeteer <span class="token keyword">from</span> <span class="token string">&quot;puppeteer&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">ssr</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">lanuch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// await page.goto(url, { waitUntil: &quot;networkidle0&quot; });</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">&quot;documentloaded&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// const html = await page.content();</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&quot;#post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> html<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u4F18\u5316 2 \u6DFB\u52A0\u7F13\u5B58 ssr.js</li></ul><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> <span class="token constant">RENDER_CACHE</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">ssr</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RENDER_CACHE</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant">RENDER_CACHE</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
  <span class="token constant">RENDER_CACHE</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> html<span class="token punctuation">)</span>
  <span class="token keyword">return</span> html
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6DFB\u52A0\u7F13\u5B58 index.html</p><div class="language-html ext-html code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-html line-numbers-mode"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">posts<span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> html <span class="token operator">=</span> posts<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">html<span class="token punctuation">,</span> post</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>html<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
        &lt;li&gt;
        &lt;h2&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>post<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/h2&gt;
        &lt;p&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>post<span class="token punctuation">.</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;
        &lt;/li&gt;
        </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;ul id=&quot;post&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>html<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;ul&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token constant">PRE_RENDER</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">PRE_RENDER</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/post&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">rednder</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u7EE7\u7EED\u4F18\u5316-\u53D6\u6D88\u4E0D\u5FC5\u8981\u7684\u7F51\u7EDC\u8BF7\u6C42 ssr.js</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">ssr</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setRequestInterception</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
  page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> whitlist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;document&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;script&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;xhr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fetch&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>whitelist<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">resourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> req<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    req<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u601D\u8003-\u6269\u5C55\u9AA8\u67B6\u5C4F</li></ul><ol start="11"><li>\u6D4B\u8BD5\u4EE3\u7801\u8986\u76D6\u7387</li></ol><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// \u5F00\u59CB\u6536\u96C6JS\u548CCSS\u6587\u4EF6\u7684\u8986\u76D6\u7387\u4FE1\u606F</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>page<span class="token punctuation">.</span>coverage<span class="token punctuation">.</span><span class="token function">startJSCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> page<span class="token punctuation">.</span>coverage<span class="token punctuation">.</span><span class="token function">startCSSCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.baidu.com&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u505C\u6B62\u6536\u96C6\u8986\u76D6\u7387\u4FE1\u606F</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>jsCoverage<span class="token punctuation">,</span> cssCoverage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    page<span class="token punctuation">.</span>coverage<span class="token punctuation">.</span><span class="token function">stopJSCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    page<span class="token punctuation">.</span>coverage<span class="token punctuation">.</span><span class="token function">stopCSSCoverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token comment">// \u6839\u636E\u8986\u76D6\u7387\u8BA1\u7B97\u4F7F\u7528\u4E86\u591A\u5C11\u5B57\u8282</span>
  <span class="token keyword">const</span> <span class="token function-variable function">calculateUsedBytes</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> coverage</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    coverage<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> url<span class="token punctuation">,</span> ranges<span class="token punctuation">,</span> text <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> usedBytes <span class="token operator">=</span> <span class="token number">0</span>

      ranges<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">range</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>usedBytes <span class="token operator">+=</span> range<span class="token punctuation">.</span>end <span class="token operator">-</span> range<span class="token punctuation">.</span>start <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        url<span class="token punctuation">,</span>
        type<span class="token punctuation">,</span>
        usedBytes<span class="token punctuation">,</span>
        <span class="token literal-property property">totalBytes</span><span class="token operator">:</span> text<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token operator">...</span><span class="token function">calculateUsedBytes</span><span class="token punctuation">(</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span> jsCoverage<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token function">calculateUsedBytes</span><span class="token punctuation">(</span><span class="token string">&#39;css&#39;</span><span class="token punctuation">,</span> cssCoverage<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><ol start="12"><li>\u4EE3\u7801\u6CE8\u5165</li><li>\u81EA\u52A8\u5316\u6D4B\u8BD5\u6269\u5C55\u7A0B\u5E8F</li><li>AB\u6D4B\u8BD5</li><li>\u4EBA\u673A\u9A8C\u8BC1</li></ol><p><a href="https://filipvitas.medium.com/how-to-bypass-slider-captcha-with-js-and-puppeteer-cd5e28105e3c" target="_blank" rel="noopener">https://filipvitas.medium.com/how-to-bypass-slider-captcha-with-js-and-puppeteer-cd5e28105e3c</a></p><p><a href="https://juejin.cn/post/6844903566289682440" target="_blank" rel="noopener">https://juejin.cn/post/6844903566289682440</a></p><p><a href="https://juejin.cn/post/6844903860788527118" target="_blank" rel="noopener">https://juejin.cn/post/6844903860788527118</a></p><p><a href="https://jsoverson.medium.com/bypassing-captchas-with-headless-chrome-93f294518337" target="_blank" rel="noopener">https://jsoverson.medium.com/bypassing-captchas-with-headless-chrome-93f294518337</a></p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> <span class="token constant">CRX</span> <span class="token operator">=</span> <span class="token string">&#39;/path/to/extension/&#39;</span>

<span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">--disable-extensions-except=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">CRX</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">--load-extension=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">CRX</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><a href="https://peter.sh/experiments/chromium-command-line-switches/" target="_blank" rel="noopener">\u6709\u54EA\u4E9B\u542F\u52A8\u53C2\u6570</a></p><ol start="16"><li>\u722C\u866B <a href="https://github.com/artiely/koa2-vue/tree/master/server/crawler" target="_blank" rel="noopener">https://github.com/artiely/koa2-vue/tree/master/server/crawler</a></li></ol><h2 id="%E5%8F%AF%E7%94%A8%E4%BA%8E%E5%9C%A8%E7%BA%BF%E6%BC%94%E7%A4%BA%E7%9A%84%E7%BD%91%E7%AB%99" tabindex="-1"><span class="prefix"></span><span class="content">\u53EF\u7528\u4E8E\u5728\u7EBF\u6F14\u793A\u7684\u7F51\u7AD9</span><span class="suffix"></span></h2><p><a href="https://try-puppeteer.appspot.com/" target="_blank" rel="noopener">https://try-puppeteer.appspot.com/</a></p><h2 id="%E6%80%BB%E7%BB%93" tabindex="-1"><span class="prefix"></span><span class="content">\u603B\u7ED3</span><span class="suffix"></span></h2><ul><li>\u7F51\u9875\u622A\u56FE\u6216\u8005\u751F\u6210 PDF</li><li>\u722C\u53D6 SPA \u6216 SSR \u7F51\u7AD9</li><li>UI \u81EA\u52A8\u5316\u6D4B\u8BD5\uFF0C\u6A21\u62DF\u8868\u5355\u63D0\u4EA4\uFF0C\u952E\u76D8\u8F93\u5165\uFF0C\u70B9\u51FB\u7B49\u884C\u4E3A</li><li>\u6355\u83B7\u7F51\u7AD9\u7684\u65F6\u95F4\u7EBF\uFF0C\u5E2E\u52A9\u8BCA\u65AD\u6027\u80FD\u95EE\u9898</li><li>\u521B\u5EFA\u4E00\u4E2A\u6700\u65B0\u7684\u81EA\u52A8\u5316\u6D4B\u8BD5\u73AF\u5883\uFF0C\u4F7F\u7528\u6700\u65B0\u7684 js \u548C\u6700\u65B0\u7684 Chrome \u6D4F\u89C8\u5668\u8FD0\u884C\u6D4B\u8BD5\u7528\u4F8B</li><li>\u6D4B\u8BD5 Chrome \u6269\u5C55\u7A0B\u5E8F \u2026</li></ul><h1 id="%E5%8F%82%E8%80%83%E7%A4%BA%E4%BE%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u53C2\u8003\u793A\u4F8B</span><span class="suffix"></span></h1><p><a href="https://github.com/artiely/puppeteer-demo" target="_blank" rel="noopener">https://github.com/artiely/puppeteer-demo</a></p><p><a href="https://github.com/puppeteer/examples" target="_blank" rel="noopener">https://github.com/puppeteer/examples</a></p><h2 id="%E5%85%A5%E9%97%A8%E8%B5%84%E6%96%99" tabindex="-1"><span class="prefix"></span><span class="content">\u5165\u95E8\u8D44\u6599</span><span class="suffix"></span></h2><p><a href="https://www.qikegu.com/docs/4531" target="_blank" rel="noopener">https://www.qikegu.com/docs/4531</a></p><p><a href="https://juejin.cn/post/6844903605485453320" target="_blank" rel="noopener">https://juejin.cn/post/6844903605485453320</a></p><h2 id="%E5%85%B6%E4%BB%96" tabindex="-1"><span class="prefix"></span><span class="content">\u5176\u4ED6</span><span class="suffix"></span></h2><p><a href="https://github.com/stereobooster/react-snap" target="_blank" rel="noopener">https://github.com/stereobooster/react-snap</a></p><p><a href="https://github.com/g-plane/rize" target="_blank" rel="noopener">https://github.com/g-plane/rize</a></p><p><a href="https://github.com/richshaw2015/wxapp-appium" target="_blank" rel="noopener">https://github.com/richshaw2015/wxapp-appium</a></p>`,71),c=[o],d={title:"\u4ECE\u4F7F\u7528\u573A\u666F\u4E86\u89E3puppeteer",tag:["puppeteer"],cover:"/2022-05-11-10-06-26.png",base64:"00cab4",author:"artiely",date:"2021-1-3",tinyCover:"/cover/2022-05-11-10-06-26.png",coverWidth:534,coverHeight:800,coverPrimary:"876f5b",coverSecondary:"7890a4",meta:[{property:"og:title",content:"\u4ECE\u4F7F\u7528\u573A\u666F\u4E86\u89E3puppeteer"}]},l={__name:"2021-1-3-puppeteer",setup(u,{expose:s}){return a({title:"\u4ECE\u4F7F\u7528\u573A\u666F\u4E86\u89E3puppeteer",meta:[{property:"og:title",content:"\u4ECE\u4F7F\u7528\u573A\u666F\u4E86\u89E3puppeteer"}]}),s({frontmatter:{title:"\u4ECE\u4F7F\u7528\u573A\u666F\u4E86\u89E3puppeteer",tag:["puppeteer"],cover:"/2022-05-11-10-06-26.png",base64:"00cab4",author:"artiely",date:"2021-1-3",tinyCover:"/cover/2022-05-11-10-06-26.png",coverWidth:534,coverHeight:800,coverPrimary:"876f5b",coverSecondary:"7890a4",meta:[{property:"og:title",content:"\u4ECE\u4F7F\u7528\u573A\u666F\u4E86\u89E3puppeteer"}]}}),(r,k)=>(p(),t("div",null,c))}};typeof n=="function"&&n(l);export{l as default,d as frontmatter};
