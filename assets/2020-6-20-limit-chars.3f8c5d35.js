import{i as a,o as p,c as t,j as n,k as e}from"./app.aed5c2e5.js";const o=e(`<h2 id="%E9%9C%80%E6%B1%82" tabindex="-1"><span class="prefix"></span><span class="content">\u9700\u6C42</span><span class="suffix"></span></h2><p>\u4E00\u4E2A\u5B57\u6BCD\u548C\u6570\u5B57\u7B97\u4F5C\u4E00\u4E2A\u5B57\u7B26\uFF0C\u4E00\u4E2A\u6C49\u5B57\u7B97\u4F5C\u4E24\u4E2A\u5B57\u7B26 \u5982\uFF1A\u4E00\u4E2A\u8F93\u5165\u6846\u53EF\u8F93\u5165 30 \u4E2A\u5B57\u7B26,\u540C\u65F6\u5C55\u793A\u5269\u4F59\u53EF\u8F93\u5165\u5B57\u7B26 \u7528\u4F8B 1\uFF1A\u53EF\u8F93\u5165 30 \u4E2A\u5B57\u6BCD\u6216\u6570\u5B57 \u7528\u4F8B 2\uFF1A\u53EA\u53EF\u8F93\u5165 15 \u4E2A\u6C49\u5B57</p><h2 id="%E5%BC%80%E5%A7%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u5F00\u59CB</span><span class="suffix"></span></h2><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">charCodeDir</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;=</span> <span class="token number">0x0001</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&lt;=</span> <span class="token number">0x007E</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;=</span> <span class="token number">0xFF9F</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&gt;=</span> <span class="token number">0xFF60</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8BA1\u7B97\u5F53\u524D\u8F93\u5165\u7684\u5B57\u8282</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token comment">// \u5355\u5B57\u8282\u52A01</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">charCodeDir</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      len<span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
      len <span class="token operator">+=</span> <span class="token number">2</span>

  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> len
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token comment">// \u8BA1\u7B97\u8FD8\u53EF\u8F93\u5165\u7684\u5B57\u8282</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">maxlen</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token number">60</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">charCodeDir</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      len <span class="token operator">-=</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> len
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-html ext-html code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-html line-numbers-mode"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>str<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>maxLength<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>input</span><span class="token punctuation">&gt;</span></span> \u5269\u4F59{{ textLen }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> maxlen<span class="token punctuation">,</span> strlen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/common/utils&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      str<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8F93\u5165\u5B57\u7B26\u7684\u957F\u5EA6</span>
    <span class="token function">hasLen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5269\u4F59\u5B57\u7B26\u7684\u957F\u5EA6</span>
    <span class="token function">textLen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hasLen<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">maxlen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u8FD9\u6837\u770B\u8D77\u6765\u662F\u6CA1\u95EE\u9898\u4E86\uFF0C\u624B\u52A8\u8F93\u5165\u4E5F\u662F\u6CA1\u6709\u4EC0\u4E48\u95EE\u9898\uFF0C\u4F46\u662F\u5982\u679C\u7528\u6237\u7C98\u8D34\u5B57\u7B26\u4E32\u8FDB\u53BB\u5C31\u66B4\u9732\u95EE\u9898\u4E86 \u7528\u6237\u53EF\u7C98\u8D34\u8D85\u8FC7 30 \u4E2A\u5B57\u7B26\u7684\u5185\u5BB9</p><h2 id="%E5%AE%8C%E5%96%84%E4%B8%80%E4%B8%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u5B8C\u5584\u4E00\u4E0B</span><span class="suffix"></span></h2><div class="language-html ext-html code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-html line-numbers-mode"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>str<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>maxLength<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>input</span><span class="token punctuation">&gt;</span></span> \u5269\u4F59{{ textLen }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> maxlen<span class="token punctuation">,</span> strlen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/common/utils&#39;</span>
<span class="token keyword">const</span> <span class="token constant">TEXT_CHARS_LENGTH</span> <span class="token operator">=</span> <span class="token number">30</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      str<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8F93\u5165\u5B57\u7B26\u7684\u957F\u5EA6</span>
    <span class="token function">hasLen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5269\u4F59\u5B57\u7B26\u7684\u957F\u5EA6</span>
    <span class="token function">textLen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token constant">TEXT_CHARS_LENGTH</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hasLen<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">maxLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">maxlen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> len <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&gt;</span> <span class="token constant">TEXT_CHARS_LENGTH</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>str <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>str <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> len2 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>len2 <span class="token operator">&gt;</span> <span class="token constant">TEXT_CHARS_LENGTH</span><span class="token punctuation">)</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h2 id="%E6%80%9D%E8%80%83" tabindex="-1"><span class="prefix"></span><span class="content">\u601D\u8003</span><span class="suffix"></span></h2><p>\u5982\u4F55\u5C06\u6B64\u903B\u8F91\u4F5C\u5C01\u88C5\u6210\u6307\u4EE4\uFF0C\u65B9\u4FBF\u540E\u671F\u540C\u6837\u7684\u9700\u6C42\u76F4\u63A5\u4F7F\u7528</p><p>\u5F85\u7EED\u3002\u3002\u3002</p>`,12),c=[o],m={title:"\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6",tag:["vue"],cover:"/2022-05-13-12-51-39.png",base64:"68a863",date:"2020-6-20",author:"artiely",tinyCover:"/cover/2022-05-13-12-51-39.png",coverWidth:564,coverHeight:1002,coverPrimary:"0a0a1c",coverSecondary:"f5f5e3",meta:[{property:"og:title",content:"\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6"}]},l={__name:"2020-6-20-limit-chars",setup(u,{expose:s}){return a({title:"\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6",meta:[{property:"og:title",content:"\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6"}]}),s({frontmatter:{title:"\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6",tag:["vue"],cover:"/2022-05-13-12-51-39.png",base64:"68a863",date:"2020-6-20",author:"artiely",tinyCover:"/cover/2022-05-13-12-51-39.png",coverWidth:564,coverHeight:1002,coverPrimary:"0a0a1c",coverSecondary:"f5f5e3",meta:[{property:"og:title",content:"\u9650\u5236\u5B57\u7B26\u7684\u957F\u5EA6"}]}}),(i,k)=>(p(),t("div",null,c))}};typeof n=="function"&&n(l);export{l as default,m as frontmatter};
