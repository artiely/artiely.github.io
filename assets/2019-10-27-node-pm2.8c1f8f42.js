import{i as a,o as p,c as t,j as n,k as e}from"./app.63029783.js";const o=e(`<h1 id="nodejs%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4" tabindex="-1"><span class="prefix"></span><span class="content">Nodejs\u8FDB\u7A0B\u5B88\u62A4</span><span class="suffix"></span></h1><h2 id="%E7%9B%AE%E6%A0%87" tabindex="-1"><span class="prefix"></span><span class="content">\u76EE\u6807</span><span class="suffix"></span></h2><ol><li>\u7406\u89E3\u4EC0\u4E48\u662F\u8FDB\u7A0B\u5B88\u62A4</li><li>\u7406\u89E3\u4E3A\u4EC0\u4E48nodejs\u670D\u52A1\u9700\u8981\u8FDB\u7A0B\u5B88\u62A4</li><li>\u4ECE\u6E90\u7801\u7406\u89E3Egg\u5BF9\u8FDB\u7A0B\u5B88\u62A4\u7684\u5904\u7406</li></ol><h2 id="%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4" tabindex="-1"><span class="prefix"></span><span class="content">\u8FDB\u7A0B\u5B88\u62A4</span><span class="suffix"></span></h2><p>\u5B88\u62A4\u8FDB\u7A0B\uFF0C\u4E5F\u5373\u901A\u5E38\u6240\u8BF4\u7684 Daemon \u8FDB\u7A0B\uFF0C\u662F Linux \u4E0B\u4E00\u79CD<strong>\u7279\u6B8A\u7684\u540E\u53F0\u670D\u52A1\u8FDB\u7A0B</strong>\uFF0C\u5B83\u72EC\u7ACB\u4E8E\u63A7\u5236\u7EC8\u7AEF\u5E76\u4E14\u5468\u671F\u6027\u7684\u6267\u884C\u67D0\u79CD\u4EFB\u52A1\u6216\u8005\u7B49\u5F85\u5904\u7406\u67D0\u4E9B\u53D1\u751F\u7684\u4E8B\u4EF6\u3002\u5B88\u62A4\u8FDB\u7A0B\u901A\u5E38\u5728\u7CFB\u7EDF\u5F15\u5BFC\u65F6\u542F\u52A8\uFF0C\u5728\u7CFB\u7EDF\u5173\u95ED\u65F6\u7EC8\u6B62\u3002Linux \u7CFB\u7EDF\u4E0B\u5927\u591A\u6570\u670D\u52A1\u90FD\u662F\u901A\u8FC7\u5B88\u62A4\u8FDB\u7A0B\u5B9E\u73B0\u7684\u3002\u5B88\u62A4\u8FDB\u7A0B\u7684\u540D\u79F0\u901A\u5E38\u4EE5 d \u7ED3\u5C3E\uFF0C\u5982 httpd\u3001crond\u3001mysqld\u7B49\u3002</p><h3 id="%E6%8E%A7%E5%88%B6%E7%BB%88%E7%AB%AF-%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F" tabindex="-1"><span class="prefix"></span><span class="content">\u63A7\u5236\u7EC8\u7AEF \u662F\u4EC0\u4E48\uFF1F</span><span class="suffix"></span></h3><p>\u7EC8\u7AEF\u662F\u7528\u6237\u4E0E\u64CD\u4F5C\u7CFB\u7EDF\u8FDB\u884C\u4EA4\u6D41\u7684\u754C\u9762\u3002\u5728 Linux \u7CFB\u7EDF\u4E2D\uFF0C\u7528\u6237\u7531\u7EC8\u7AEF\u767B\u5F55\u7CFB\u7EDF\u767B\u5165\u7CFB\u7EDF\u540E\u4F1A\u5F97\u5230\u4E00\u4E2A shell \u8FDB\u7A0B\uFF0C\u8FD9\u4E2A\u7EC8\u7AEF\u4FBF\u6210\u4E3A\u8FD9\u4E2A shell \u8FDB\u7A0B\u7684\u63A7\u5236\u7EC8\u7AEF\uFF08Controlling Terminal\uFF09\u3002<strong>shell \u8FDB\u7A0B\u542F\u52A8\u7684\u5176\u4ED6\u8FDB\u7A0B\uFF0C\u7531\u4E8E\u590D\u5236\u4E86\u7236\u8FDB\u7A0B\u7684\u4FE1\u606F\uFF0C\u56E0\u6B64\u4E5F\u90FD\u540C\u4F9D\u9644\u4E8E\u8FD9\u4E2A\u63A7\u5236\u7EC8\u7AEF\u3002</strong></p><p>\u4ECE\u7EC8\u7AEF\u542F\u52A8\u7684\u8FDB\u7A0B\u90FD\u4F9D\u9644\u4E8E\u8BE5\u7EC8\u7AEF\uFF0C**\u5E76\u53D7\u7EC8\u7AEF\u63A7\u5236\u548C\u5F71\u54CD\u3002**\u7EC8\u7AEF\u5173\u95ED\uFF0C\u76F8\u5E94\u7684\u8FDB\u7A0B\u90FD\u4F1A\u81EA\u52A8\u5173\u95ED\u3002\u5B88\u62A4\u8FDB\u7A0B\u8131\u79BB\u7EC8\u7AEF\u7684\u76EE\u7684\uFF0C\u4E5F\u5373\u662F\u4E0D\u53D7\u7EC8\u7AEF\u53D8\u5316\u7684\u5F71\u54CD\u4E0D\u88AB\u7EC8\u7AEF\u6253\u65AD\uFF0C\u5F53\u7136\u4E5F\u4E0D\u60F3\u5728\u7EC8\u7AEF\u663E\u793A\u6267\u884C\u8FC7\u7A0B\u4E2D\u7684\u4FE1\u606F\u3002</p><p>\u5982\u679C\u4E0D\u60F3\u8FDB\u7A0B\u53D7\u5230\u7528\u6237\u3001\u7EC8\u7AEF\u6216\u5176\u4ED6\u53D8\u5316\u7684\u5F71\u54CD\uFF0C<strong>\u5C31\u5FC5\u987B\u628A\u5B83\u53D8\u6210\u5B88\u62A4\u8FDB\u7A0B</strong>\u3002\u5B88\u62A4\u8FDB\u7A0B\u53EF\u4EE5\u5728 Linux \u542F\u52A8\u65F6\u4ECE\u811A\u672C /etc/rc.d \u542F\u52A8\uFF0C\u4E5F\u53EF\u4EE5\u7531\u4F5C\u4E1A\u89C4\u5212\u8FDB\u7A0B crond \u542F\u52A8\uFF0C\u8FD8\u53EF\u4EE5\u901A\u8FC7\u7528\u6237\u7EC8\u7AEF\uFF08\u4E00\u822C\u662F Shell\uFF09\u542F\u52A8\u3002</p><h3 id="%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u5982\u4F55\u5B9E\u73B0\u5B88\u62A4\u8FDB\u7A0B</span><span class="suffix"></span></h3><p>**\u5B88\u62A4\u8FDB\u7A0B\u5C5E\u4E8E Linux \u8FDB\u7A0B\u7BA1\u7406\u7684\u8303\u7574\u3002**\u5176\u9996\u8981\u7684\u7279\u6027\u662F\u540E\u53F0\u8FD0\u884C\uFF0C\u5176\u6B21\uFF0C\u8981\u4E0E\u4ECE\u542F\u52A8\u5B83\u7684\u7236\u8FDB\u7A0B\u7684\u8FD0\u884C\u73AF\u5883\u9694\u79BB\u5F00\u6765\uFF0C\u9700\u8981\u5904\u7406\u7684\u5185\u5BB9\u5927\u81F4\u5305\u62EC\u4F1A\u8BDD\u3001\u63A7\u5236\u7EC8\u7AEF\u3001\u8FDB\u7A0B\u7EC4\u3001\u6587\u4EF6\u63CF\u8FF0\u7B26\u3001\u6587\u4EF6\u6743\u9650\u63A9\u7801\u4EE5\u53CA\u5DE5\u4F5C\u76EE\u5F55\u7B49\u3002</p><p>\u5B9E\u73B0\u4E00\u4E2A\u5B88\u62A4\u8FDB\u7A0B\uFF0C\u5176\u5B9E\u5C31\u662F\u5C06\u666E\u901A\u8FDB\u7A0B\u6309\u7167\u4E0A\u8FF0\u7279\u6027\u6539\u9020\u4E3A\u5B88\u62A4\u8FDB\u7A0B\u7684\u8FC7\u7A0B\u3002\u9700\u8981\u6CE8\u610F\u7684\u4E00\u70B9\u662F\uFF0C\u4E0D\u540C\u7248\u672C\u7684 Unix \u7CFB\u7EDF\u5176\u5B9E\u73B0\u673A\u5236\u4E0D\u540C\uFF0CBSD \u548C Linux \u4E0B\u7684\u5B9E\u73B0\u7EC6\u8282\u5C31\u4E0D\u540C\u3002\u6839\u636E\u4E0A\u8FF0\u7684\u7279\u6027\uFF0C\u6211\u4EEC\u4FBF\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684\u5B88\u62A4\u8FDB\u7A0B\uFF0C\u8FD9\u91CC\u4EE5 Linux \u7CFB\u7EDF\u4E0B\u4ECE\u7EC8\u7AEF Shell \u6765\u542F\u52A8\u4E3A\u4F8B\u3002</p><p>\u6838\u5FC3\u6B65\u9AA4\uFF1A</p><blockquote><ol><li>\u521B\u5EFA\u5B50\u8FDB\u7A0B\uFF0C\u7236\u8FDB\u7A0B\u9000\u51FA</li><li>\u5B50\u8FDB\u7A0B\u521B\u5EFA\u65B0\u4F1A\u8BDD</li></ol></blockquote><h4 id="shell" tabindex="-1"><span class="prefix"></span><span class="content">shell</span><span class="suffix"></span></h4><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell"><span class="token function">nohup</span> <span class="token function">node</span> http.js <span class="token operator">&amp;</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h4 id="nodejs" tabindex="-1"><span class="prefix"></span><span class="content">nodejs</span><span class="suffix"></span></h4><p>\u6838\u5FC3\uFF1A detached\uFF0C \u5E2E\u52A9\u7236\u5B50\u8FDB\u7A0B\u8131\u79BB\u5173\u7CFB</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>spawn

<span class="token keyword">const</span> ls <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;http.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">detached</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

ls<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

ls<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

ls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5B50\u8FDB\u7A0B\u9000\u51FA\uFF0C\u9000\u51FA\u7801 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="%E9%9C%80%E8%A6%81%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4%E7%9A%84%E5%8E%9F%E5%9B%A0" tabindex="-1"><span class="prefix"></span><span class="content">\u9700\u8981\u8FDB\u7A0B\u5B88\u62A4\u7684\u539F\u56E0</span><span class="suffix"></span></h2><p>\u670D\u52A1\u7A33\u5B9A\u7684\u56E0\u7D20</p><ol><li>\u540E\u53F0\u8FD0\u884C</li><li>\u5BF9\u540E\u53F0\u8FD0\u884C\u8FDB\u7A0B\u7684&quot;\u5B88\u62A4&quot;</li></ol><p>\u7531\u4E8Enodejs\u7684\u5355\u7EBF\u7A0B\u7684\u8106\u5F31\u6027\uFF0C\u4E00\u65E6\u9047\u5230\u8FD0\u884C\u9519\u8BEF\u4FBF\u4F1A\u4E25\u91CD\u5230\u9000\u51FAnode\u8FDB\u7A0B\u5BFC\u81F4\u7CFB\u7EDF\u6216\u5E94\u7528\u762B\u75EA\u3002</p><p><strong>\u7ED3\u8BBA\uFF1A \u8FDB\u7A0B\u5B88\u62A4\uFF0C\u5B88\u62A4\u7684\u8FC7\u7A0B\u5176\u5B9E\u53EF\u4EE5\u7406\u89E3\u4E3A\uFF0C\u670D\u52A1\u7684\u91CD\u542F\u3002</strong></p><p>\u5B9E\u4F8B\uFF1A</p><p>\u9047\u5230\u9519\u8BEF\uFF0C\u8FDB\u7A0B\u9000\u51FA\u3002</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/zqz&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">throw</span> <span class="token string">&#39;req Error&#39;</span>

  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;3000&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Server running...&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u6211\u4EEC\u8BF7\u6C42localhost:3000</p><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell"> $  <span class="token function">node</span> index.js
Server running<span class="token punctuation">..</span>.
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="%E5%B8%B8%E7%94%A8%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4%E6%96%B9%E6%A1%88" tabindex="-1"><span class="prefix"></span><span class="content">\u5E38\u7528\u8FDB\u7A0B\u5B88\u62A4\u65B9\u6848</span><span class="suffix"></span></h2><ul><li>pm2</li><li>forever</li></ul><h3 id="pm2" tabindex="-1"><span class="prefix"></span><span class="content">PM2</span><span class="suffix"></span></h3><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200314161858.png" alt="image-20191027012904510"></figure><p>PM2\u662F\u5E26\u6709\u5185\u7F6E\u8D1F\u8F7D\u5E73\u8861\u5668\u7684Node.js\u5E94\u7528\u7A0B\u5E8F\u7684\u751F\u4EA7\u8FC7\u7A0B\u7BA1\u7406\u5668\u3002\u5B83\u4F7F\u60A8\u53EF\u4EE5\u4F7F\u5E94\u7528\u7A0B\u5E8F\u6C38\u8FDC\u4FDD\u6301\u6D3B\u52A8\u72B6\u6001\uFF0C\u65E0\u9700\u505C\u673A\u5373\u53EF\u91CD\u65B0\u52A0\u8F7D\u5B83\u4EEC\uFF0C\u5E76\u7B80\u5316\u5E38\u89C1\u7684\u7CFB\u7EDF\u7BA1\u7406\u4EFB\u52A1\u3002</p><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> pm2 -g
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u542F\u52A8\u670D\u52A1\uFF1A</p><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell">pm2 start app.js
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200314161902.png" alt="image-20191027012935914"></figure><h3 id="forever" tabindex="-1"><span class="prefix"></span><span class="content">Forever</span><span class="suffix"></span></h3><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200314161909.png" alt="image-20191027012925383"></figure><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> forever -g
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u542F\u52A8\u670D\u52A1:</p><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell">forever start app.js
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="egg" tabindex="-1"><span class="prefix"></span><span class="content">Egg</span><span class="suffix"></span></h3><p>\u542F\u52A8\u547D\u4EE4</p><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell"><span class="token function">npm</span> run start
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u5F15\u7528\uFF1Apackage.json</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-scripts start --daemon --title=egg-server-demo&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;stop&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-scripts stop --title=egg-server-demo&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-bin dev&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;debug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-bin debug&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run lint -- --fix &amp;&amp; npm run test-local&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;test-local&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-bin test&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;cov&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-bin cov&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint .&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ci&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run lint &amp;&amp; npm run cov&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;autod&quot;</span><span class="token operator">:</span> <span class="token string">&quot;autod&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="egg.js-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E4%B8%BA%E4%BB%80%E4%B9%88%E6%B2%A1%E6%9C%89%E9%80%89%E5%9E%8B-pm2-%EF%BC%9F" tabindex="-1"><span class="prefix"></span><span class="content">Egg.js \u8FDB\u7A0B\u7BA1\u7406\u4E3A\u4EC0\u4E48\u6CA1\u6709\u9009\u578B PM2 \uFF1F</span><span class="suffix"></span></h4><blockquote><ol><li>PM2 \u6A21\u5757\u672C\u8EAB\u590D\u6742\u5EA6\u5F88\u9AD8\uFF0C\u51FA\u4E86\u95EE\u9898\u5F88\u96BE\u6392\u67E5\u3002\u6211\u4EEC\u8BA4\u4E3A\u6846\u67B6\u4F7F\u7528\u7684\u5DE5\u5177\u590D\u6742\u5EA6\u4E0D\u5E94\u8BE5\u8FC7\u9AD8\uFF0C\u800C PM2 \u81EA\u8EAB\u7684\u590D\u6742\u5EA6\u8D85\u8D8A\u4E86\u5927\u90E8\u5206\u5E94\u7528\u672C\u8EAB\u3002</li><li>\u6CA1\u6CD5\u505A\u975E\u5E38\u6DF1\u7684\u4F18\u5316\u3002</li><li>\u5207\u5B9E\u7684\u9700\u6C42\u95EE\u9898\uFF0C\u4E00\u4E2A\u8FDB\u7A0B\u91CC\u8DD1 leader\uFF0C\u5176\u4ED6\u8FDB\u7A0B\u4EE3\u7406\u5230 leader \u8FD9\u79CD\u6A21\u5F0F\uFF08<a href="https://link.zhihu.com/?target=https%3A//eggjs.org/zh-cn/core/cluster-and-ipc.html" target="_blank" rel="noopener">\u591A\u8FDB\u7A0B\u6A21\u578B</a>\uFF09\uFF0C\u5728\u4F01\u4E1A\u7EA7\u5F00\u53D1\u4E2D\u5BF9\u4E8E\u51CF\u5C11\u8FDC\u7AEF\u8FDE\u63A5\uFF0C\u964D\u4F4E\u6570\u636E\u901A\u4FE1\u538B\u529B\u7B49\u90FD\u662F\u5207\u5B9E\u7684\u9700\u6C42\u3002\u7279\u522B\u5F53\u5E94\u7528\u89C4\u6A21\u5927\u5230\u4E00\u5B9A\u7A0B\u5EA6\uFF0C\u8FD9\u5C31\u4F1A\u662F\u521A\u9700\u3002egg \u672C\u8EAB\u8D77\u6E90\u4E8E\u8682\u8681\u91D1\u670D\u548C\u963F\u91CC\uFF0C\u6211\u4EEC\u5BF9\u6807\u7684\u8D77\u70B9\u5C31\u662F\u5927\u89C4\u6A21\u4F01\u4E1A\u5E94\u7528\u7684\u6784\u5EFA\uFF0C\u6240\u4EE5\u8981\u975E\u5E38\u5168\u9762\u3002\u8FD9\u4E9B\u7279\u6027\u901A\u8FC7 PM2 \u5F88\u96BE\u505A\u5230\u3002</li></ol></blockquote><h5 id="%E5%BC%95%E5%85%A5egg%E4%BD%9C%E8%80%85%E5%A4%A9%E7%8C%AA%E7%9A%84%E5%9B%9E%E7%AD%94" tabindex="-1"><span class="prefix"></span><span class="content">\u5F15\u5165EGG\u4F5C\u8005\u5929\u732A\u7684\u56DE\u7B54</span><span class="suffix"></span></h5><p><a href="https://www.zhihu.com/question/298718190/answer/511704261" target="_blank" rel="noopener">https://www.zhihu.com/question/298718190/answer/511704261</a></p><h2 id="%E4%BB%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90egg%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86" tabindex="-1"><span class="prefix"></span><span class="content">\u4ECE\u6E90\u7801\u5206\u6790EGG\u8FDB\u7A0B\u7BA1\u7406</span><span class="suffix"></span></h2><p>script\u4E2D\u7684start\u4E3A\u5207\u5165\u70B9\uFF0C\u4ECEegg-script\u5F00\u59CB\u5206\u6790</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;private&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;egg&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;declarations&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;egg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.15.1&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;egg-scripts&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.11.0&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;autod&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;autod-egg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.1.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;egg-bin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.11.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;egg-ci&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.11.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;egg-mock&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.21.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;eslint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.13.0&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;eslint-config-egg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^7.1.0&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;engines&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt;=10.0.0&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-scripts start --daemon --title=egg-server-demo&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;stop&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-scripts stop --title=egg-server-demo&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-bin dev&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;debug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-bin debug&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run lint -- --fix &amp;&amp; npm run test-local&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;test-local&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-bin test&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;cov&quot;</span><span class="token operator">:</span> <span class="token string">&quot;egg-bin cov&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint .&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ci&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run lint &amp;&amp; npm run cov&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;autod&quot;</span><span class="token operator">:</span> <span class="token string">&quot;autod&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;ci&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;repository&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;git&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MIT&quot;</span>
<span class="token punctuation">}</span>

</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h3 id="%E4%BB%8E%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%A7%8B" tabindex="-1"><span class="prefix"></span><span class="content">\u4ECE\u547D\u4EE4\u884C\u5F00\u59CB</span><span class="suffix"></span></h3><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">EggScripts</span> <span class="token keyword">extends</span> <span class="token class-name">Command</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">rawArgv</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>rawArgv<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>usage <span class="token operator">=</span> <span class="token string">&#39;Usage: egg-scripts [command] [options]&#39;</span>

    <span class="token comment">// load directory</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;lib/cmd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u770B\u770BCommand\u6765\u81EA\u54EA\u91CC\uFF1F</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> BaseCommand <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;common-bin&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">Command</span> <span class="token keyword">extends</span> <span class="token class-name">BaseCommand</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="common-bin" tabindex="-1"><span class="prefix"></span><span class="content">common-bin</span><span class="suffix"></span></h4><p><a href="https://github.com/node-modules/common-bin" target="_blank" rel="noopener">https://github.com/node-modules/common-bin</a></p><p>BaseCommand\u5176\u5B9E\u662F\u5BF9\u547D\u4EE4\u884C\u7684\u4E00\u79CD\u62BD\u8C61\uFF0C\u53EF\u4EE5\u65B9\u4FBF\u6211\u4EEC\u8FDB\u884C\u547D\u4EE4\u884C\u5DE5\u5177\u7684\u4E1A\u52A1\u7F16\u5199\u3002</p><p>\u76EE\u5F55\u89C4\u8303\uFF1A\u4E0EEgg-scripts\u4E00\u81F4</p><div class="language-shell ext-shell code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-shell line-numbers-mode"><code class="language-shell">test/fixtures/my-git
\u251C\u2500\u2500 bin
\u2502   \u2514\u2500\u2500 my-git.js
\u251C\u2500\u2500 <span class="token builtin class-name">command</span>
\u2502   \u251C\u2500\u2500 remote
\u2502   \u2502   \u251C\u2500\u2500 add.js
\u2502   \u2502   \u2514\u2500\u2500 remove.js
\u2502   \u251C\u2500\u2500 clone.js
\u2502   \u2514\u2500\u2500 remote.js
\u251C\u2500\u2500 index.js
\u2514\u2500\u2500 package.json
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="command.js" tabindex="-1"><span class="prefix"></span><span class="content">command.js</span><span class="suffix"></span></h4><p>\u4E3B\u8981\u96C6\u4E2D\u5728sourcemap\u53C2\u6570\u7684\u5904\u7406\u3002</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token string">&#39;use strict&#39;</span>

<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> BaseCommand <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;common-bin&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Logger <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zlogger&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> helper <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./helper&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Command</span> <span class="token keyword">extends</span> <span class="token class-name">BaseCommand</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">rawArgv</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>rawArgv<span class="token punctuation">)</span>

    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>helper<span class="token punctuation">,</span> helper<span class="token punctuation">)</span>

    <span class="token comment">// \u53C2\u6570\u7684\u89E3\u6790\u89C4\u5219</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parserOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">removeAlias</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">removeCamelCase</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">execArgv</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// common-bin setter, don&#39;t care about override at sub class</span>
    <span class="token comment">// https://github.com/node-modules/common-bin/blob/master/lib/command.js#L158</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;whether enable sourcemap support, will load \`source-map-support\` etc&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;ts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;typescript&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u65E5\u5FD7\u5BF9\u4E8E\u670D\u52A1\u5668\u6765\u8BF4\u4E5F\u975E\u5E38\u7684\u91CD\u8981</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Logger</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;[egg-scripts] &#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">context</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u73AF\u5883\u4FE1\u606F \u4EE5\u53CA\u53C2\u6570</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span>context
    <span class="token keyword">const</span> <span class="token punctuation">{</span> argv<span class="token punctuation">,</span> execArgvObj<span class="token punctuation">,</span> cwd <span class="token punctuation">}</span> <span class="token operator">=</span> context

    <span class="token comment">// read \`egg.typescript\` from package.json</span>
    <span class="token keyword">let</span> baseDir <span class="token operator">=</span> argv<span class="token punctuation">.</span>_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> cwd
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>path<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">)</span><span class="token punctuation">)</span> baseDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>cwd<span class="token punctuation">,</span> baseDir<span class="token punctuation">)</span>
    <span class="token keyword">const</span> pkgFile <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">,</span> <span class="token string">&#39;package.json&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>pkgFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> pkgInfo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>pkgFile<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>pkgInfo <span class="token operator">&amp;&amp;</span> pkgInfo<span class="token punctuation">.</span>egg <span class="token operator">&amp;&amp;</span> pkgInfo<span class="token punctuation">.</span>egg<span class="token punctuation">.</span>typescript<span class="token punctuation">)</span>
        argv<span class="token punctuation">.</span>sourcemap <span class="token operator">=</span> <span class="token boolean">true</span>

    <span class="token punctuation">}</span>

    <span class="token comment">// execArgv</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>sourcemap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      execArgvObj<span class="token punctuation">.</span>require <span class="token operator">=</span> execArgvObj<span class="token punctuation">.</span>require <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      execArgvObj<span class="token punctuation">.</span>require<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;source-map-support/register&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    argv<span class="token punctuation">.</span>sourcemap <span class="token operator">=</span> argv<span class="token punctuation">.</span>typescript <span class="token operator">=</span> argv<span class="token punctuation">.</span>ts <span class="token operator">=</span> <span class="token keyword">undefined</span>

    <span class="token keyword">return</span> context
  <span class="token punctuation">}</span>

  <span class="token function">exit</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Command
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><h4 id="zlogger" tabindex="-1"><span class="prefix"></span><span class="content">zlogger</span><span class="suffix"></span></h4><p>Egg\u5E95\u5C42\u4F9D\u8D56\u7684log\u5E93\u3002</p><p>\u652F\u6301\u7684\u529F\u80FD\uFF1A</p><ul><li>\u2714\uFE0E Extends <a href="https://nodejs.org/api/console.html#console_new_console_stdout_stderr" target="_blank" rel="noopener">Console</a></li><li>\u2714\uFE0E Support custom prefix before every line</li><li>\u2714\uFE0E Support custom stdout and stderr</li><li>\u2714\uFE0E Support print time</li><li>\u2714\uFE0E Support child logger</li><li>\u2714\uFE0E Support logger level</li></ul><p><a href="https://github.com/node-modules/zlogger" target="_blank" rel="noopener">https://github.com/node-modules/zlogger</a></p><h4 id="startcommand" tabindex="-1"><span class="prefix"></span><span class="content">StartCommand</span><span class="suffix"></span></h4><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token string">&#39;use strict&#39;</span>

<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;debug&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;egg-script:start&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> execFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mz/child_process&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mz/fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> homedir <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node-homedir&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> mkdirp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mz-modules/mkdirp&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> moment <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;moment&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> sleep <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mz-modules/sleep&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>spawn
<span class="token comment">// \u5DE5\u5177\u5E93</span>
<span class="token keyword">const</span> utils <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;egg-utils&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Command <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../command&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">StartCommand</span> <span class="token keyword">extends</span> <span class="token class-name">Command</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">rawArgv</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>rawArgv<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>usage <span class="token operator">=</span> <span class="token string">&#39;Usage: egg-scripts start [options] [baseDir]&#39;</span>

    <span class="token comment">// \u81EA\u5B9A\u4E49\u65B9\u6CD5</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>serverBin <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../start-cluster&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u53C2\u6570\u5B9A\u4E49</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FDB\u7A0B\u540D\u79F0</span>
      <span class="token string-property property">&#39;title&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;process title description, use for kill grep, default to \`egg-server-\${APP_NAME}\`&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// \u6307\u5B9A\u521B\u5EFA\u591A\u5C11\u4E2A\u5B50\u8FDB\u7A0B</span>
      <span class="token string-property property">&#39;workers&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;numbers of app workers, default to \`os.cpus().length\`&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">EGG_WORKERS</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>

      <span class="token string-property property">&#39;port&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;listening port, default to \`({}).PORT\`&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;env&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;server env, default to \`({}).EGG_SERVER_ENV\`&#39;</span><span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">EGG_SERVER_ENV</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// egg\u4E1A\u52A1\u4EE3\u7801</span>
      <span class="token string-property property">&#39;framework&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;specify framework that can be absolute path or npm package&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;daemon&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;whether run at background daemon mode&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;stdout&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;customize stdout file&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;stderr&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;customize stderr file&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;timeout&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;the maximum timeout when app starts&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">300</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;ignore-stderr&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;whether ignore stderr when app starts&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;node&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;customize node command path&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Start server at prod mode&#39;</span>
  <span class="token punctuation">}</span>

  <span class="token operator">*</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> argv<span class="token punctuation">,</span> env<span class="token punctuation">,</span> cwd<span class="token punctuation">,</span> execArgv <span class="token punctuation">}</span> <span class="token operator">=</span> context

    <span class="token comment">// \u5F53\u524D\u7528\u6237\u7684\u6839\u76EE\u5F55</span>
    <span class="token keyword">const</span> <span class="token constant">HOME</span> <span class="token operator">=</span> <span class="token function">homedir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// \u65E5\u5FD7\u6587\u4EF6\u8DEF\u5F84</span>
    <span class="token keyword">const</span> logDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token constant">HOME</span><span class="token punctuation">,</span> <span class="token string">&#39;logs&#39;</span><span class="token punctuation">)</span>

    <span class="token comment">// egg-script start</span>
    <span class="token comment">// egg-script start ./server</span>
    <span class="token comment">// egg-script start /opt/app</span>
    <span class="token keyword">let</span> baseDir <span class="token operator">=</span> argv<span class="token punctuation">.</span>_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> cwd

    <span class="token comment">// baseDir\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>path<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">)</span><span class="token punctuation">)</span> baseDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>cwd<span class="token punctuation">,</span> baseDir<span class="token punctuation">)</span>
    argv<span class="token punctuation">.</span>baseDir <span class="token operator">=</span> baseDir

    <span class="token comment">// \u662F\u5426\u5B88\u62A4</span>
    <span class="token keyword">const</span> isDaemon <span class="token operator">=</span> argv<span class="token punctuation">.</span>daemon
    <span class="token comment">// \u83B7\u53D6 framework \u5730\u5740</span>
    argv<span class="token punctuation">.</span>framework <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFrameworkPath</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">framework</span><span class="token operator">:</span> argv<span class="token punctuation">.</span>framework<span class="token punctuation">,</span>
      baseDir<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>frameworkName <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFrameworkName</span><span class="token punctuation">(</span>argv<span class="token punctuation">.</span>framework<span class="token punctuation">)</span>

    <span class="token keyword">const</span> pkgInfo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">,</span> <span class="token string">&#39;package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    argv<span class="token punctuation">.</span>title <span class="token operator">=</span> argv<span class="token punctuation">.</span>title <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">egg-server-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pkgInfo<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

    argv<span class="token punctuation">.</span>stdout <span class="token operator">=</span> argv<span class="token punctuation">.</span>stdout <span class="token operator">||</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>logDir<span class="token punctuation">,</span> <span class="token string">&#39;master-stdout.log&#39;</span><span class="token punctuation">)</span>
    argv<span class="token punctuation">.</span>stderr <span class="token operator">=</span> argv<span class="token punctuation">.</span>stderr <span class="token operator">||</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>logDir<span class="token punctuation">,</span> <span class="token string">&#39;master-stderr.log&#39;</span><span class="token punctuation">)</span>

    <span class="token comment">// normalize env</span>
    env<span class="token punctuation">.</span><span class="token constant">HOME</span> <span class="token operator">=</span> <span class="token constant">HOME</span>

    <span class="token comment">// egg-scripts start \u4F1A\u628A\u73AF\u5883\u53D8\u4E3A\u751F\u4EA7\u73AF\u5883</span>
    env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">=</span> <span class="token string">&#39;production&#39;</span>

    <span class="token comment">// it makes env big but more robust</span>
    env<span class="token punctuation">.</span><span class="token constant">PATH</span> <span class="token operator">=</span> env<span class="token punctuation">.</span>Path <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token comment">// for nodeinstall</span>
      path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">,</span> <span class="token string">&#39;node_modules/.bin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// support \`.node/bin\`, due to npm5 will remove \`node_modules/.bin\`</span>
      path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">,</span> <span class="token string">&#39;.node/bin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// adjust env for win</span>
      env<span class="token punctuation">.</span><span class="token constant">PATH</span> <span class="token operator">||</span> env<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">!</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>delimiter<span class="token punctuation">)</span>

    <span class="token comment">// for alinode</span>
    env<span class="token punctuation">.</span><span class="token constant">ENABLE_NODE_LOG</span> <span class="token operator">=</span> <span class="token string">&#39;YES&#39;</span>
    env<span class="token punctuation">.</span><span class="token constant">NODE_LOG_DIR</span> <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">NODE_LOG_DIR</span> <span class="token operator">||</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>logDir<span class="token punctuation">,</span> <span class="token string">&#39;alinode&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">yield</span> <span class="token function">mkdirp</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">NODE_LOG_DIR</span><span class="token punctuation">)</span>

    <span class="token comment">// cli argv -&gt; ({}).EGG_SERVER_ENV -&gt; \`undefined\` then egg will use \`prod\`</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>env<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// if undefined, should not pass key due to \`spwan\`, https://github.com/nodejs/node/blob/master/lib/child_process.js#L470</span>
      env<span class="token punctuation">.</span><span class="token constant">EGG_SERVER_ENV</span> <span class="token operator">=</span> argv<span class="token punctuation">.</span>env
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> command <span class="token operator">=</span> argv<span class="token punctuation">.</span>node <span class="token operator">||</span> <span class="token string">&#39;node&#39;</span>

    <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
      execArgv<span class="token punctuation">,</span>
      env<span class="token punctuation">,</span>
      <span class="token literal-property property">stdio</span><span class="token operator">:</span> <span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">detached</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// \u5728\u521B\u5EFA\u5B50\u8FDB\u7A0B\u7684\u65F6\u5019\u53EF\u4EE5\u8131\u79BB\u7236\u4EB2</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Starting %s application at %s&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>frameworkName<span class="token punctuation">,</span> baseDir<span class="token punctuation">)</span>

    <span class="token comment">// remove unused properties from stringify, alias had been remove by \`removeAlias\`</span>
    <span class="token keyword">const</span> ignoreKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;_&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;$0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;env&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;daemon&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;stdout&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;stderr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;timeout&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ignore-stderr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;node&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> clusterOptions <span class="token operator">=</span> <span class="token function">stringify</span><span class="token punctuation">(</span>argv<span class="token punctuation">,</span> ignoreKeys<span class="token punctuation">)</span>
    <span class="token comment">// Note: \`spawn\` is not like \`fork\`, had to pass \`execArgv\` youself</span>
    <span class="token keyword">const</span> eggArgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">(</span>execArgv <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>serverBin<span class="token punctuation">,</span> clusterOptions<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">--title=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>argv<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Run node %s&#39;</span><span class="token punctuation">,</span> eggArgs<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// whether run in the background.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isDaemon<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5B88\u62A4\u8FDB\u7A0B</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Save log file to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>logDir<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

      <span class="token keyword">const</span> <span class="token punctuation">[</span>stdout<span class="token punctuation">,</span> stderr<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token punctuation">[</span><span class="token function">getRotatelog</span><span class="token punctuation">(</span>argv<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getRotatelog</span><span class="token punctuation">(</span>argv<span class="token punctuation">.</span>stderr<span class="token punctuation">)</span><span class="token punctuation">]</span>
      options<span class="token punctuation">.</span>stdio <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr<span class="token punctuation">,</span> <span class="token string">&#39;ipc&#39;</span><span class="token punctuation">]</span>
      options<span class="token punctuation">.</span>detached <span class="token operator">=</span> <span class="token boolean">true</span>

      <span class="token comment">// debug(&#39;Run spawn \`%s %s\`&#39;, command, eggArgs.join(&#39; &#39;));</span>
      <span class="token comment">// debug(&#39;=======&#39;, command, eggArgs, options );</span>

      <span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>child <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> eggArgs<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>isReady <span class="token operator">=</span> <span class="token boolean">false</span>
      child<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">/* istanbul ignore else */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>action <span class="token operator">===</span> <span class="token string">&#39;egg-ready&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>isReady <span class="token operator">=</span> <span class="token boolean">true</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;%s started on %s&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>frameworkName<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>data<span class="token punctuation">.</span>address<span class="token punctuation">)</span>
          child<span class="token punctuation">.</span><span class="token function">unref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          child<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token comment">// check start status</span>
      <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkStatus</span><span class="token punctuation">(</span>argv<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      options<span class="token punctuation">.</span>stdio <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ipc&#39;</span><span class="token punctuation">]</span>
      <span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&#39;Run spawn \`%s %s\`&#39;</span><span class="token punctuation">,</span> command<span class="token punctuation">,</span> eggArgs<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>child <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> eggArgs<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
      child<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// command should exit after child process exit</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>

      <span class="token comment">// attach master signal to child</span>
      <span class="token keyword">let</span> signal<span class="token punctuation">;</span>
      <span class="token punctuation">[</span><span class="token string">&#39;SIGINT&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SIGQUIT&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SIGTERM&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        process<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&#39;Kill child %s with %s&#39;</span><span class="token punctuation">,</span> child<span class="token punctuation">.</span>pid<span class="token punctuation">,</span> signal<span class="token punctuation">)</span>
          child<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token operator">*</span> <span class="token function">getFrameworkPath</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> utils<span class="token punctuation">.</span><span class="token function">getFrameworkPath</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token operator">*</span> <span class="token function">getFrameworkName</span><span class="token punctuation">(</span><span class="token parameter">framework</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pkgPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>framework<span class="token punctuation">,</span> <span class="token string">&#39;package.json&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;egg&#39;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>pkgPath<span class="token punctuation">)</span>
      <span class="token comment">/* istanbul ignore else */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>name<span class="token punctuation">)</span> name <span class="token operator">=</span> pkg<span class="token punctuation">.</span>name
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* istanbul next */</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> name
  <span class="token punctuation">}</span>

  <span class="token operator">*</span> <span class="token function">checkStatus</span><span class="token punctuation">(</span><span class="token punctuation">{</span> stderr<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> <span class="token string-property property">&#39;ignore-stderr&#39;</span><span class="token operator">:</span> ignoreStdErr <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> hasError <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">let</span> isSuccess <span class="token operator">=</span> <span class="token boolean">true</span>
    timeout <span class="token operator">=</span> timeout <span class="token operator">/</span> <span class="token number">1000</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isReady<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> stat <span class="token operator">=</span> <span class="token keyword">yield</span> fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>stderr<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>stat <span class="token operator">&amp;&amp;</span> stat<span class="token punctuation">.</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          hasError <span class="token operator">=</span> <span class="token boolean">true</span>
          <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// nothing</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;=</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Start failed, %ds timeout&#39;</span><span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>
        isSuccess <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">yield</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Wait Start: %d...&#39;</span><span class="token punctuation">,</span> <span class="token operator">++</span>count<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;-n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">,</span> stderr<span class="token punctuation">]</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;tail %s&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>stdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">execFile</span><span class="token punctuation">(</span><span class="token string">&#39;tail&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Got error when startup: &#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;ignore tail error: %s&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      isSuccess <span class="token operator">=</span> ignoreStdErr
      <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Start got error, see %s&#39;</span><span class="token punctuation">,</span> stderr<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Or use \`--ignore-stderr\` to ignore stderr at startup.&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSuccess<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span><span class="token string">&#39;SIGTERM&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">yield</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">getRotatelog</span><span class="token punctuation">(</span><span class="token parameter">logfile</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token function">mkdirp</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>logfile<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">yield</span> fs<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>logfile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// format style: .20150602.193100</span>
    <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;.YYYYMMDD.HHmmss&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// Note: rename last log to next start time, not when last log file created</span>
    <span class="token keyword">yield</span> fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>logfile<span class="token punctuation">,</span> logfile <span class="token operator">+</span> timestamp<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">yield</span> fs<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>logfile<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">stringify</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> ignore</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ignore<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
      result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>

  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> StartCommand
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br></div></div><h3 id="npm-link" tabindex="-1"><span class="prefix"></span><span class="content">npm link</span><span class="suffix"></span></h3><p>node \u5E94\u7528\u5F00\u53D1\u4E2D\uFF0C\u6211\u4EEC\u4E0D\u53EF\u907F\u514D\u7684\u9700\u8981\u4F7F\u7528\u6216\u62C6\u5206\u4E3A npm \u6A21\u5757\uFF0C\u7ECF\u5E38\u9047\u5230\u7684\u4E00\u4E2A\u95EE\u9898\u662F\uFF1A</p><blockquote><p>\u65B0\u5F00\u53D1\u6216\u4FEE\u6539\u7684 npm \u6A21\u5757\uFF0C\u5982\u4F55\u5728\u9879\u76EE\u4E2D\u8BD5\u9A8C\uFF1F</p></blockquote><p>\u4F46\u5176\u5B9E npm \u672C\u8EAB\u5DF2\u7ECF\u5BF9\u6B64\u7C7B\u60C5\u51B5\u63D0\u4F9B\u4E86\u4E13\u95E8\u7684 <code class="">npm link</code> \u6307\u4EE4\u3002</p><p>\u76F8\u5173\u6587\u6863\uFF1A <a href="https://yq.aliyun.com/go/articleRenderRedirect?url=https%3A%2F%2Flink.juejin.im%2F%3Ftarget%3Dhttps%3A%2F%2Fdocs.npmjs.com%2Fcli%2Flink" target="_blank" rel="noopener">docs.npmjs.com/cli/link</a></p><div class="language-none ext-none code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-none line-numbers-mode"><code class="language-none">$ cd path/to/my-project
$ npm link path/to/my-utils
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7B80\u5355\u7684\u66FF\u6362\u4E00\u4E2A\u5355\u8BCD\uFF0C\u5C31\u641E\u5B9A\u4E86\uFF0Ccool~</p><p>\u5982\u679C\u8FD9\u4E24\u79CD\u7684\u76EE\u5F55\u4E0D\u5728\u4E00\u8D77\uFF0C\u90A3\u8FD8\u6709\u4E00\u79CD\u65B9\u6CD5\uFF1A</p><div class="language-none ext-none code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-none line-numbers-mode"><code class="language-none">$ # \u5148\u53BB\u5230\u6A21\u5757\u76EE\u5F55\uFF0C\u628A\u5B83 link \u5230\u5168\u5C40
$ cd path/to/my-utils
$ npm link
$
$ # \u518D\u53BB\u9879\u76EE\u76EE\u5F55\u901A\u8FC7\u5305\u540D\u6765 link
$ cd path/to/my-project
$ npm link my-utils
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8BE5\u6307\u4EE4\u8FD8\u53EF\u4EE5\u7528\u6765\u8C03\u8BD5 node cli \u6A21\u5757\uFF0C\u8B6C\u5982\u9700\u8981\u672C\u5730\u8C03\u8BD5\u6211\u4EEC\u7684 egg-init\uFF0C\u53EF\u4EE5\u8FD9\u6837\uFF1A</p><div class="language-none ext-none code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-none line-numbers-mode"><code class="language-none">$ cd path/to/egg-init
$ npm link
$ # \u6B64\u65F6\u5168\u5C40\u7684 egg-init \u6307\u4EE4\u5C31\u5DF2\u7ECF\u6307\u5411\u4F60\u7684\u672C\u5730\u5F00\u53D1\u76EE\u5F55\u4E86
$ egg-init # \u5373\u53EF
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u60F3\u53BB\u6389 link \u4E5F\u5F88\u7B80\u5355\uFF1A</p><div class="language-none ext-none code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-none line-numbers-mode"><code class="language-none">npm unlink my-utils
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="egg-scripts%E6%B5%81%E7%A8%8B" tabindex="-1"><span class="prefix"></span><span class="content">Egg-Scripts\u6D41\u7A0B</span><span class="suffix"></span></h3><figure><img src="https://gitee.com/artiely/Figure-bed/raw/master/images/20200314162006.png" alt="image-20191027192550338"></figure><h3 id="egg-cluster" tabindex="-1"><span class="prefix"></span><span class="content">egg-cluster</span><span class="suffix"></span></h3>`,90),c=[o],m={title:"Nodejs\u901A\u7528\u4E1A\u52A1\u6A21\u5757",tag:["nodejs","daemon","shell","pm2","forever","egg","npm link"],author:"Artiely",date:"2019-10-27",cover:"/2022-05-14-22-06-07.png",base64:"2c3033",tinyCover:"/cover/2022-05-14-22-06-07.png",coverWidth:640,coverHeight:1136,coverPrimary:"343d45",coverSecondary:"cbc2ba",meta:[{property:"og:title",content:"Nodejs\u901A\u7528\u4E1A\u52A1\u6A21\u5757"}]},l={__name:"2019-10-27-node-pm2",setup(r,{expose:s}){return a({title:"Nodejs\u901A\u7528\u4E1A\u52A1\u6A21\u5757",meta:[{property:"og:title",content:"Nodejs\u901A\u7528\u4E1A\u52A1\u6A21\u5757"}]}),s({frontmatter:{title:"Nodejs\u901A\u7528\u4E1A\u52A1\u6A21\u5757",tag:["nodejs","daemon","shell","pm2","forever","egg","npm link"],author:"Artiely",date:"2019-10-27",cover:"/2022-05-14-22-06-07.png",base64:"2c3033",tinyCover:"/cover/2022-05-14-22-06-07.png",coverWidth:640,coverHeight:1136,coverPrimary:"343d45",coverSecondary:"cbc2ba",meta:[{property:"og:title",content:"Nodejs\u901A\u7528\u4E1A\u52A1\u6A21\u5757"}]}}),(i,k)=>(p(),t("div",null,c))}};typeof n=="function"&&n(l);export{l as default,m as frontmatter};
