import{i as a,o as p,c as t,j as n,k as o}from"./app.8f9fe947.js";const e=o(`<h1 id="log4js%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8" tabindex="-1"><span class="prefix"></span><span class="content">log4js\u7B80\u5355\u4F7F\u7528</span><span class="suffix"></span></h1><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js">npm install log4js

<span class="token keyword">var</span> log4js <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;log4js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> logger <span class="token operator">=</span> log4js<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
logger<span class="token punctuation">.</span>level <span class="token operator">=</span> <span class="token string">&quot;debug&quot;</span><span class="token punctuation">;</span> <span class="token comment">// default level is OFF - which means no logs at all.</span>
logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Some debug messages&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="%E9%99%84%E5%8A%A0%E5%99%A8" tabindex="-1"><span class="prefix"></span><span class="content">\u9644\u52A0\u5668</span><span class="suffix"></span></h2><p>Appender \u5C06\u65E5\u5FD7\u4E8B\u4EF6\u5E8F\u5217\u5316\u4E3A\u67D0\u79CD\u5F62\u5F0F\u7684\u8F93\u51FA\u3002\u4ED6\u4EEC\u53EF\u4EE5\u5199\u5165\u6587\u4EF6\u3001\u53D1\u9001\u7535\u5B50\u90AE\u4EF6\u3001\u901A\u8FC7\u7F51\u7EDC\u53D1\u9001\u6570\u636E\u3002\u6240\u6709\u7684 appender \u90FD\u6709\u4E00\u4E2Atype\u51B3\u5B9A\u4F7F\u7528\u54EA\u4E2A appender\u3002\u4F8B\u5982\uFF1A</p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> log4js <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;log4js&#39;</span><span class="token punctuation">)</span>
log4js<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">appenders</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">out</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;stdout&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">app</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;application.log&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">categories</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">appenders</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;out&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;app&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token string">&#39;debug&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u5B9A\u4E49\u4E86\u4E24\u4E2A\u540D\u4E3A\u201Cout\u201D\u548C\u201Capp\u201D\u7684\u9644\u52A0\u7A0B\u5E8F\u3002\u2018out\u2019 \u4F7F\u7528\u5199\u5165\u6807\u51C6\u8F93\u51FA\u7684\u6807\u51C6\u8F93\u51FA\u9644\u52A0\u7A0B\u5E8F\u3002\u2018app\u2019 \u4F7F\u7528\u6587\u4EF6appender\uFF0C\u914D\u7F6E\u4E3A\u5199\u5165 \u2018application.log\u2019\u3002</p><p><a href="https://log4js-node.github.io/log4js-node/appenders.html" target="_blank" rel="noopener">\u6587\u6863</a></p><h2 id="%E6%88%91%E7%9A%84%E9%85%8D%E7%BD%AE" tabindex="-1"><span class="prefix"></span><span class="content">\u6211\u7684\u914D\u7F6E</span><span class="suffix"></span></h2><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> log4js <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;log4js&#39;</span><span class="token punctuation">)</span>
log4js<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">appenders</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">tiktok</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;log&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">categories</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">appenders</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;tiktok&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token string">&#39;all&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">pm2</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">pm2InstanceVar</span><span class="token operator">:</span> <span class="token string">&#39;NODE_APP_INSTANCE&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> log <span class="token operator">=</span> log4js<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&#39;\u65E5\u5FD7&#39;</span><span class="token punctuation">)</span>

log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&#39;\u7CFB\u7EDF&#39;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">platform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code class="">log.js</code></p><div class="language-js ext-js code-wrapper"><div class="cbt-traffic_light"><span></span><span></span><span></span></div><span class="copy"></span><div class="code-inner"><pre class="language-js line-numbers-mode"><code class="language-js"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> expressWs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express-ws&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>
<span class="token keyword">let</span> LogWS <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token keyword">const</span> rooms <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
app<span class="token punctuation">.</span><span class="token function">ws</span><span class="token punctuation">(</span><span class="token string">&#39;/log/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ws<span class="token punctuation">,</span> req</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  LogWS <span class="token operator">=</span> ws
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query
  <span class="token keyword">let</span> curr <span class="token operator">=</span> rooms<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">room</span> <span class="token operator">=&gt;</span> room<span class="token punctuation">.</span>id <span class="token operator">==</span> id<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>curr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    curr <span class="token operator">=</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> ws <span class="token punctuation">}</span>
    rooms<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>curr<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    curr<span class="token punctuation">.</span>ws <span class="token operator">=</span> ws
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rooms<span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;9001&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u65E5\u5FD7\u670D\u52A1\u5DF2\u542F\u52A89001\u7AEF\u53E3&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">stdoutAppender</span><span class="token punctuation">(</span><span class="token parameter">layout<span class="token punctuation">,</span> timezoneOffset</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">appender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">loggingEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loggingEvent<span class="token punctuation">.</span>level<span class="token punctuation">.</span>levelStr <span class="token operator">==</span> <span class="token string">&#39;DEBUG&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> currWs <span class="token operator">=</span> rooms<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">room</span> <span class="token operator">=&gt;</span> room<span class="token punctuation">.</span>id <span class="token operator">==</span> loggingEvent<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>currWs <span class="token operator">&amp;&amp;</span> LogWS<span class="token punctuation">)</span>
        LogWS<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">layout</span><span class="token punctuation">(</span>loggingEvent<span class="token punctuation">,</span> timezoneOffset<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

    <span class="token punctuation">}</span>
    <span class="token comment">// process.stdout.write(\`\${layout(loggingEvent, timezoneOffset)}\\n\`);</span>
    process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>loggingEvent<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// add a shutdown function.</span>
  appender<span class="token punctuation">.</span><span class="token function-variable function">shutdown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">done</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> done<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> appender
<span class="token punctuation">}</span>

<span class="token comment">// stdout configure doesn&#39;t need to use findAppender, or levels</span>
<span class="token keyword">function</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> layouts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// the default layout for the appender</span>
  <span class="token keyword">let</span> layout <span class="token operator">=</span> layouts<span class="token punctuation">.</span>colouredLayout
  <span class="token comment">// check if there is another layout specified</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>layout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// load the layout</span>
    layout <span class="token operator">=</span> layouts<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>type<span class="token punctuation">,</span> config<span class="token punctuation">.</span>layout<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// create a new appender instance</span>
  <span class="token keyword">return</span> <span class="token function">stdoutAppender</span><span class="token punctuation">(</span>layout<span class="token punctuation">,</span> config<span class="token punctuation">.</span>timezoneOffset<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// export the only function needed</span>
exports<span class="token punctuation">.</span>configure <span class="token operator">=</span> configure
</code></pre></div><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><h2 id="%E7%96%91%E9%97%AE" tabindex="-1"><span class="prefix"></span><span class="content">\u7591\u95EE</span><span class="suffix"></span></h2><p>appender\u4F3C\u4E4E\u53EA\u652F\u6301\u8DEF\u5F84\u548C\u6A21\u5757\u540D\uFF0C\u4E0D\u652F\u6301\u76F4\u63A5\u5199\u5165\u51FD\u6570\u3002 \u5982\u679C\u53EF\u4EE5\u652F\u6301\u5199\u5165\u51FD\u6570\u5C31\u66F4\u597D\u4E86\uFF0C\u6709\u66F4\u5927\u7684\u7075\u6D3B\u6027\u3002\u6216\u8BB8\u6709\u66F4\u597D\u7684\u65B9\u5F0F\u3002</p>`,13),c=[e],d={tag:["log4js","nodejs","express","webSocket"],cover:"/2022-05-10-18-10-42.png",tinyCover:"/cover/2022-05-10-18-10-42.png",coverWidth:564,coverHeight:877,meta:[]},l={__name:"index",setup(r,{expose:s}){return a({meta:[]}),s({frontmatter:{tag:["log4js","nodejs","express","webSocket"],cover:"/2022-05-10-18-10-42.png",tinyCover:"/cover/2022-05-10-18-10-42.png",coverWidth:564,coverHeight:877,meta:[]}}),(i,k)=>(p(),t("div",null,c))}};typeof n=="function"&&n(l);export{l as default,d as frontmatter};
